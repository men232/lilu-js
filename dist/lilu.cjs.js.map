{"version":3,"file":"lilu.cjs.js","sources":["../lib/utils/object.js","../lib/utils/timer.ts","../lib/utils/array.js","../lib/utils/format.js","../lib/utils/text-table.js","../lib/utils/tbag.js","../lib/utils/promiseOrCallback.js","../lib/operators.ts","../lib/errors/LiluExpressionParserError.ts","../lib/expression.ts","../lib/rule.ts","../lib/permission.ts","../lib/errors/LiluTimeoutError.ts","../lib/utils/promiseTimeout.js","../lib/errors/LiluGrantedError.ts","../lib/lilu.ts"],"sourcesContent":["import cloneDeep from 'clone-deep';\n\nexport { cloneDeep as clone };\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nexport function set(obj, path, value) {\n  if (Object(obj) !== obj) return obj;\n  // If not yet an array, get the keys from the string-path\n  if (!Array.isArray(path)) path = path.toString().match(/[^.[\\]]+/g) || [];\n\n  path.slice(0,-1).reduce((a, c, i) => // Iterate all of them except the last one\n   Object(a[c]) === a[c] // Does the key exist and is its value an object?\n       // Yes: then follow that path\n       ? a[c]\n       // No: create the key. Is the next key a potential array-index?\n       : a[c] = Math.abs(path[i+1])>>0 === +path[i+1]\n             ? [] // Yes: assign a new array object\n             : {}, // No: assign a new plain object\n   obj)[path[path.length-1]] = value; // Finally assign the value to the last key\n\n  return obj; // Return the top-level object to allow chaining\n}\n\nexport function get(obj, path, defaultValue = undefined) {\n  const travel = regexp =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj);\n\n  const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n\n  return result === undefined || result === obj ? defaultValue : result;\n}\n\nexport function pick(obj, list) {\n  const result = {};\n\n  for(const key of list) {\n    result[key] = get(obj, key);\n  }\n\n  return result;\n}\n\nexport function defineGetter(obj, key, getterFn) {\n  delete obj[key];\n\n  Object.defineProperty(obj, key, {\n    get: getterFn,\n    enumerable: true,\n    configurable: true\n  });\n}\n","export default function timer() {\n  let startAt = Date.now();\n\n  const instance = {\n    reset: () => {\n      startAt = Date.now();\n\n      return instance;\n    },\n    click: () => Date.now() - startAt\n  };\n\n  return instance;\n}\n","export function uniq(arr) {\n  return [...new Set(arr)];\n}\n\nexport function pull(items, valuesToRemove) {\n  return items.filter(item => !valuesToRemove.includes(item));\n}\n\nexport function flat(arr, depth) {\n  depth = isNaN(depth) ? 1 : Number(depth);\n\n  return depth ? Array.prototype.reduce.call(arr, function(acc, cur) {\n    if (Array.isArray(cur)) {\n      acc.push.apply(acc, flat(cur, depth - 1));\n    } else {\n      acc.push(cur);\n    }\n\n    return acc;\n  }, []) : Array.prototype.slice.call(arr);\n}\n","export default function format(fmt, ...args) {\n  const re = /(%?)(%([jdsoO]))/g;\n\n  if (args.length) {\n    fmt = fmt.replace(re, (match, escaped, ptn, flag) => {\n      let arg = args.shift();\n      switch(flag) {\n        case 's':\n          arg = '' + arg;\n          break;\n        case 'd':\n          arg = Number(arg);\n          break;\n        case 'j':\n          arg = JSON.stringify(arg);\n          break;\n        case 'o':\n          arg = JSON.stringify(arg);\n          break;\n        case 'O':\n          arg = JSON.stringify(arg, null, 2);\n          break;\n      }\n      if(!escaped) {\n        return arg;\n      }\n      args.unshift(arg);\n      return match;\n    })\n  }\n\n  if (args.length) {\n    fmt += ' ' + args.join(' ');\n  }\n\n  // update escaped %% values\n  fmt = fmt.replace(/%{2}/g, '%');\n\n  return '' + fmt;\n}\n","import format from './format';\n\nexport default function textTable() {\n  const rows = [];\n  const instance = this;\n\n  let MAX_LENGTH_PER_CELL = [];\n  let MAX_LINES_PER_ROWS = [];\n  let MAP_IS_ROW_LABEL = [];\n  let MAX_CELL_AMOUNT = 0;\n\n  const api = {\n    row: createRow,\n    label: createLabel,\n    tableWrite: complete\n  };\n\n  function complete() {\n    const isLabelFirst = !!MAP_IS_ROW_LABEL[0];\n    const isLabelLast = !!MAP_IS_ROW_LABEL[rows.length - 1];\n\n    const maxLabelLength = Math.max(\n      ...rows\n        .filter((v, idx) => !!MAP_IS_ROW_LABEL[idx])\n        .map(row => Math.max(...row[0].map(v => v.length)))\n    );\n\n    const maxRowLength = MAX_LENGTH_PER_CELL.reduce((a, b) => a + b, 0);\n\n    if (maxLabelLength > maxRowLength) {\n      const avgDiff = Math.round((maxLabelLength - maxRowLength) / MAX_CELL_AMOUNT);\n      MAX_LENGTH_PER_CELL = MAX_LENGTH_PER_CELL.map(v => v + avgDiff);\n    }\n\n    const start = '┌' + MAX_LENGTH_PER_CELL\n      .map(len => ''.padStart(len + 2, '─'))\n      .join(isLabelFirst ? '─' : '┬') + '┐\\n';\n\n    const end = '\\n└' + MAX_LENGTH_PER_CELL\n      .map(len => ''.padStart(len + 2, '─'))\n      .join(isLabelLast ? '─' : '┴') + '┘';\n\n    const result = ''\n      + start\n      + rows.map((row, rowIdx) => {\n        const lines = [];\n        const isLabel = !!MAP_IS_ROW_LABEL[rowIdx];\n        const isNextLabel = !!MAP_IS_ROW_LABEL[rowIdx + 1];\n        const isLastRow = rowIdx === (rows.length - 1);\n\n        const rowSplitter = '\\n├' + MAX_LENGTH_PER_CELL\n          .map(len => ''.padStart(len + 2, '─'))\n          .join(\n            isLabel\n              ? (isLastRow || isNextLabel ? '─' : '┬')\n              : (isNextLabel ? '┴' : '┼')\n          ) + '┤\\n';\n\n        const cellSplitter = isLabel\n          ? '   '\n          : ' │ ';\n\n        for (let lineIdx = 0; lineIdx < MAX_LINES_PER_ROWS[rowIdx]; lineIdx++) {\n          const cells = [];\n\n          for (let cellIdx = 0; cellIdx < MAX_CELL_AMOUNT; cellIdx++) {\n            const coll = row[cellIdx]\n              ? (row[cellIdx][lineIdx] ? row[cellIdx][lineIdx] : '')\n              : '';\n\n            if (isLabel) {\n              const maxLen = MAX_LENGTH_PER_CELL.reduce((a, b) => a + b + 2, 0);\n              cells.push(coll.padEnd(maxLen, ' '));\n              break;\n            } else {\n              const maxLen = MAX_LENGTH_PER_CELL[cellIdx];\n              cells.push(coll.padEnd(maxLen, ' '));\n            }\n          }\n\n          lines.push('│ ' + cells.join(cellSplitter) + ' │');\n        }\n\n        return lines.join('\\n') + (isLastRow ? '' : rowSplitter);\n      }).join('')\n      + end\n    ;\n\n    return instance.w(result);\n  }\n\n  function createCell(rowIdx, fmt, ...args) {\n    const row = rows[rowIdx];\n    const lines = format(String(fmt), ...args).split('\\n');\n    const cellIdx = row.length;\n\n    MAX_LENGTH_PER_CELL[cellIdx] = Math.max(\n      MAX_LENGTH_PER_CELL[cellIdx] || 0,\n      ...lines.map(v => v.length)\n    );\n\n    MAX_LINES_PER_ROWS[rowIdx] = Math.max(\n      MAX_LINES_PER_ROWS[rowIdx] || 0,\n      lines.length\n    );\n\n    MAX_CELL_AMOUNT = Math.max(MAX_CELL_AMOUNT, cellIdx + 1);\n    row.push(lines);\n\n    return {\n      ...api,\n      cell: createCell.bind(null, rowIdx)\n    }\n  }\n\n  function createRow() {\n    const row = [];\n    const rowIdx = rows.push(row) - 1;\n\n    return {\n      ...api,\n      cell: createCell.bind(null, rowIdx)\n    }\n  }\n\n  function createLabel(fmt, ...args) {\n    createRow();\n    const rowIdx = rows.length - 1;\n\n      const cellLength = MAX_LENGTH_PER_CELL[0] || 0;\n      createCell(rowIdx, fmt || '', ...args);\n      MAX_LENGTH_PER_CELL[0] = cellLength;\n      MAP_IS_ROW_LABEL[rowIdx] = true;\n\n    return api;\n  }\n\n  return api;\n}\n","import * as array from './array';\nimport format from './format';\nimport textTable from './text-table';\n\nconst chr = function(s) {\n  return s;\n};\n\nexport default function createTBag() {\n  const rootChilds = [];\n  const lines = [];\n\n  const collect = ({ lines, childs }, prefix = '') => {\n    if (!lines || !lines.length && childs && childs.length) {\n      lines = array.flat(childs.map(v => v.lines));\n      childs = array.flat(childs.map(v => v.childs));\n\n      return collect({ lines, childs }, prefix);\n    }\n\n    const splitter = prefix\n      ? '\\n' + prefix + (childs.length ? chr('│') : ' ') + ' '\n      : '\\n';\n\n    return prefix\n      + lines.join(splitter) + '\\n'\n      + childs.map(function(child, ix) {\n        const last = ix === childs.length - 1;\n        const more = child.childs && child.childs.length;\n        const prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n\n        return prefix\n          + (last ? chr('└') : chr('├')) + chr('─')\n          + (more ? chr('┬') : chr('─')) + ' '\n          + collect(child, prefix_).slice(prefix.length + 2)\n          ;\n      }).join('')\n      ;\n  };\n\n  const rootCollect = () => collect({ lines, childs: rootChilds });\n\n  return {\n    w(...args) {\n      const line = format(...args);\n      lines.push(...line.split('\\n'));\n      return this;\n    },\n    table: textTable,\n    a(...args) {\n      const line = format(...args);\n      lines.unshift(...line.split('\\n'));\n      return this;\n    },\n    attach(instance) {\n      return this.child(instance);\n    },\n    child(instance) {\n      instance = instance || createTBag();\n\n      instance.isChild = true;\n      instance.collect = this.isChild\n        ? this.collect\n        : rootCollect;\n\n      rootChilds.push(instance);\n\n      return instance;\n    },\n    childs: rootChilds,\n    lines: lines,\n    collect: rootCollect,\n    str: () => collect({ lines, childs: rootChilds })\n  }\n}\n\n/*\nconst t = createTBag();\n\nconsole.log(\nt\n  .table()\n  .row()\n    .cell('header 1')\n    .cell('header 2')\n    .cell('header 3')\n  .row()\n    .cell('cell 1\\ntest')\n    .cell('cell 2')\n    .cell('cell 3 qewr q,lw;r qlwr m;qwlrm lqr; qwlr q;lwrm')\n  .row()\n    .cell('cell 1')\n    .cell('cell 2')\n    .cell('cell 3')\n  .tableWrite()\n  .child()\n  .w('test 1')\n  .w('test 2')\n  .w('test 3')\n  .child()\n  .w('test 2.1')\n  .w('test 2.2')\n  .w('test 2.3')\n  .collect()\n);\n*/\n","export default function promiseOrCallback(callback, fn) {\n  if (typeof callback === 'function') {\n    return fn(function(error) {\n      if (error != null) {\n        try {\n          callback(error);\n        } catch (error) {\n          return process.nextTick(() => {\n            throw error;\n          });\n        }\n        return;\n      }\n      callback.apply(this, arguments);\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    fn(function(error, res) {\n      if (error !== null) {\n        return reject(error);\n      }\n      if (arguments.length > 2) {\n        return resolve(Array.prototype.slice.call(arguments, 1));\n      }\n      resolve(res);\n    });\n  });\n}\n","export type OperatorHandler = (left: any, right: any) => boolean\n\nexport interface OperatorMap {\n  [key: string]: OperatorHandler\n}\n\nexport const DEFAULT_OPERATORS: OperatorMap = {\n  '>': (leftValue: any, rightValue: any) => {\n    return leftValue > rightValue;\n  },\n\n  '>=': (leftValue: any, rightValue: any) => {\n    return leftValue > rightValue;\n  },\n\n  '<': (leftValue: any, rightValue: any) => {\n    return leftValue < rightValue;\n  },\n\n  '<=': (leftValue: any, rightValue: any) => {\n    return leftValue <= rightValue;\n  },\n\n  '==': (leftValue: any, rightValue: any) => {\n    return leftValue === rightValue;\n  },\n\n  '!=': (leftValue: any, rightValue: any) => {\n    return leftValue !== rightValue;\n  },\n\n  'in': (leftValue: any, rightValue: any) => {\n    if (!Array.isArray(leftValue)) leftValue = [leftValue];\n    if (!Array.isArray(rightValue)) rightValue = [rightValue];\n\n    return leftValue.some((value: any) => rightValue.indexOf(value) > -1);\n  }\n};\n","export class LiluExpressionParserError extends Error {\n  name: string;\n  expressionText: string | null;\n  code: number;\n\n  constructor(message: string, expressionText?: string, code?: number) {\n    super(message);\n\n    this.name = 'LiluExpressionParserError';\n    this.expressionText = expressionText || null;\n    this.code = code || -1;\n  }\n\n  toString(): string {\n    return `${this.name}(${this.code}, \"${this.expressionText}\", ${this.message})`;\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      expressionText: this.expressionText,\n      code: this.code\n    });\n  }\n}\n","import debug from 'debug';\nimport evaluate from 'static-eval';\nimport esprima from 'esprima';\nimport * as ESTree from 'estree';\n\nimport * as obj from './utils/object';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport { LiluExpressionParserError } from './errors/LiluExpressionParserError';\n\nconst d = debug('lilu:expression');\nconst dError = debug('lilu:expression:error');\n\n// eslint-disable-next-line no-useless-escape\nconst EXPRESSION_REG_EXP = /({{(.*?)}}|\\[.*?]|\".*?\"|[^\\s]+)/g;\n\nexport interface ExpressionOptions {\n  strict: boolean;\n  operators: OperatorMap;\n}\n\nexport interface EvalContext {\n  [key: string]: any;\n}\n\nexport interface EvalStack {\n  leftValue: { raw: null | string; ensured: any, type: string };\n  rightValue: { raw: null | string; ensured: any, type: string };\n  operator: null | string;\n}\n\nexport interface EvalResult {\n  error: boolean;\n  stack: EvalStack;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n}\n\nexport interface ParsedBase {\n  type: string;\n  raw: string;\n  value: any;\n}\n\nexport interface ParsedVariable extends ParsedBase {\n  type: 'variable';\n  value: string;\n}\n\nexport interface ParsedExpression extends ParsedBase {\n  type: 'expression';\n  value: ESTree.Expression;\n}\n\nexport interface ParsedOperator extends ParsedBase {\n  type: 'operator';\n  value: string;\n}\n\nexport interface ParsedLiteral extends ParsedBase {\n  type: LiteralType;\n  value: LiteralValue;\n}\n\nexport interface ParsedUnknown extends ParsedBase {\n  type: 'unknown';\n  value: any;\n}\n\nexport interface ExpressionJSON {\n  str: string;\n  variables: Array<string>;\n  operators: string[];\n  isValid: boolean;\n  name: string;\n  strict: boolean;\n}\n\nexport type LiteralType =\n  | 'string'\n  | 'object'\n  | 'number'\n  | 'boolean'\n  | 'array'\n  | 'null';\n\nexport type LiteralValue =\n  | string\n  | object\n  | Array<any>\n  | number\n  | boolean\n  | null;\n\nexport type ParsedItem =\n  | ParsedVariable\n  | ParsedExpression\n  | ParsedOperator\n  | ParsedLiteral\n  | ParsedUnknown;\n\nexport class Expression {\n  protected _raw: string;\n\n  protected _parsed: Array<ParsedItem>;\n\n  protected _variables: Array<string>;\n\n  protected _strict: boolean;\n\n  protected _operators: OperatorMap;\n\n  constructor(str: string, options?: Partial<ExpressionOptions>) {\n    options = options || {};\n\n    this._raw = str;\n    this._parsed = [];\n    this._variables = [];\n    this._strict = options.strict || false;\n    this._operators = obj.clone(options.operators || DEFAULT_OPERATORS);\n\n    this._parse();\n    this.validate();\n  }\n\n  get name(): string {\n    return 'LiLuExpression';\n  }\n\n  get strict(): boolean {\n    return this._strict;\n  }\n\n  get raw(): string {\n    return this._raw;\n  }\n\n  get variables(): Array<string> {\n    return [...this._variables];\n  }\n\n  get isValid(): boolean {\n    try {\n      this.validate();\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  validate(): boolean {\n    if (this._parsed === null) {\n      this._parse();\n    }\n\n    if (!this._parsed || !Array.isArray(this._parsed)) {\n      throw new LiluExpressionParserError(\n        'Unknown error while parsing an expression.',\n        this._raw,\n      );\n    }\n\n    const raw = this._raw;\n    const parsed = this._parsed;\n\n    switch (true) {\n      case parsed.length !== 3:\n        throw new LiluExpressionParserError(\n          `Expect 3 parts of expression, parsed: ${parsed.length}`,\n          raw,\n        );\n\n      case parsed[0].type === 'operator':\n        throw new LiluExpressionParserError(\n          'The first part of expression is operator.',\n          raw,\n        );\n\n      case parsed[0].type === 'unknown':\n        throw new LiluExpressionParserError(\n          'The first part of expression is unknown.',\n          raw,\n        );\n\n      case parsed[1].type !== 'operator':\n        throw new LiluExpressionParserError(\n          `The second part of expression must be an operator, parsed: ${parsed[1].type}.`,\n          raw,\n        );\n\n      case typeof this._operators[parsed[1].value] !== 'function':\n        throw new LiluExpressionParserError(\n          `The second part operator has unknown, parsed: ${parsed[1].value}.`,\n          raw,\n        );\n\n      case parsed[2].type === 'unknown':\n        throw new LiluExpressionParserError(\n          'The third part of expression is unknown.',\n          raw,\n        );\n\n      case parsed[2].type === 'operator':\n        throw new LiluExpressionParserError(\n          'The third part of expression is operator.',\n          raw,\n        );\n\n      default:\n        return true;\n    }\n  }\n\n  toString(): string {\n    return `${this.name}(${this._raw}): VALID = ${\n      this.isValid\n    } VARS = ${this._variables.join(', ')}`;\n  }\n\n  toJSON(): ExpressionJSON {\n    return {\n      name: this.name,\n      strict: this.strict,\n      str: this.raw,\n      variables: this.variables,\n      operators: Object.keys(this._operators),\n      isValid: this.isValid,\n    };\n  }\n\n  eval(context?: EvalContext): EvalResult {\n    context = context || {};\n\n    const stack: EvalStack = {\n      operator: null,\n      leftValue: { raw: null, ensured: null, type: 'unknown' },\n      rightValue: { raw: null, ensured: null, type: 'unknown' },\n    };\n\n    const complete = (result: boolean): EvalResult => {\n      return {\n        error: false,\n        result,\n        stack,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): EvalResult => {\n      return {\n        error: true,\n        errMsg,\n        errCode,\n        stack,\n      };\n    };\n\n    // if (this._strict) {\n    //   const missedContextKey = this._variables.find(\n    //     (keyPath) => obj.get(context, keyPath) === undefined,\n    //   );\n    //\n    //   if (missedContextKey) {\n    //     return fail(-1, `missed context variable: ${missedContextKey}`);\n    //   }\n    // }\n\n    try {\n      const left = this._parsed[0];\n      const operator = this._parsed[1] as ParsedOperator;\n      const right = this._parsed[2];\n\n      stack.leftValue.raw = left.raw;\n      stack.leftValue.type = left.type;\n\n      stack.rightValue.raw = right.raw;\n      stack.rightValue.type = right.type;\n\n      stack.leftValue.ensured = this._ensureValue(left, context);\n      stack.rightValue.ensured = this._ensureValue(right, context);\n\n      stack.operator = operator.value;\n\n      const operatorFn = this._operators[operator.value];\n\n      if (typeof operatorFn !== 'function') throw new LiluExpressionEvalError(\n        `Attempt to eval with unknown operator: ${operator.value}`,\n        this._raw,\n        context,\n        2\n      );\n\n      const result: boolean = operatorFn(\n        stack.leftValue.ensured,\n        stack.rightValue.ensured,\n      );\n\n      d(\n        '%s %s %s RESULT = %s\\n    BY VALUES:\\n      \"%s\" = %o\\n      \"%s\" = %o',\n        stack.leftValue.raw,\n        stack.operator,\n        stack.rightValue.raw,\n        result,\n        stack.leftValue.raw,\n        stack.leftValue.ensured,\n        stack.rightValue.raw,\n        stack.rightValue.ensured,\n      );\n\n      return complete(result);\n    } catch (err) {\n      dError(\n        'EVAL ERROR\\n  raw = \"%s\"\\n  context = %O\\n  err = %O',\n        this._raw,\n        context,\n        err,\n      );\n\n      return fail(err.code || -1, err.stack);\n    }\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n\n  protected _parse(): void {\n    const parsed: Array<ParsedItem> = [];\n    const variables: Array<string> = [];\n\n    d('PARSE LINE = \"%s\"', this._raw);\n\n    let matches;\n\n    while ((matches = EXPRESSION_REG_EXP.exec(this._raw)) !== null) {\n      const str = (matches[3] || matches[2] || matches[1] || 'null').trim();\n\n      let parsedItem: ParsedItem;\n\n      if (!matches || !matches[0]) {\n        parsedItem = { type: 'unknown', value: str, raw: str };\n      } else {\n        parsedItem = this._parseExpression(str);\n      }\n\n      d(\n        'CAST STR = \"%s\"\\n    TYPE = %s\\n    RESULT = %o',\n        str,\n        parsedItem.type,\n        parsedItem.value,\n      );\n\n      parsed.push(parsedItem);\n\n      if (parsedItem.type === 'variable') {\n        variables.push(parsedItem.value);\n      } else if (parsedItem.type === 'expression') {\n        variables.push(...this._extractEsprimaVariables(parsedItem.value));\n      }\n    }\n\n    this._parsed = parsed;\n    this._variables = variables;\n  }\n\n  protected _extractEsprimaVariables(\n    expression: ESTree.Expression,\n  ): Array<string> {\n    const list: Array<string> = [];\n\n    if (expression.type === 'Identifier') {\n      list.push(expression.name);\n    } else if (expression.type === 'BinaryExpression') {\n      for (const el of [expression.left, expression.right]) {\n        list.push(...this._extractEsprimaVariables(el));\n      }\n    } else if (expression.type === 'MemberExpression') {\n      const objName = (expression.object as ESTree.Identifier).name;\n      const objProp = (expression.property as ESTree.Identifier).name;\n\n      list.push(`${objName}.${objProp}`);\n    } else if (expression.type === 'ArrayExpression') {\n      for (const el of expression.elements) {\n        list.push(...this._extractEsprimaVariables(el as ESTree.Expression));\n      }\n    }\n\n    return list;\n  }\n\n  protected _parseExpression(str: string): ParsedItem {\n    try {\n      // Cast as operator\n      if (this._operators[str]) {\n        return { type: 'operator', value: str, raw: str };\n      }\n\n      const expr = esprima.parseScript(str).body[0];\n\n      if (expr.type !== 'ExpressionStatement') {\n        throw new LiluExpressionParserError(\n          `Unexpected esprima expression type ${expr.type}`,\n        );\n      }\n\n      const ast = expr.expression;\n\n      let type;\n      let value;\n\n      switch (true) {\n        // Cast as variable\n        case ast.type === 'Identifier' || ast.type === 'MemberExpression':\n          return { type: 'variable', value: str, raw: str };\n\n        // Cast as literal\n        case ast.type === 'Literal':\n          value = evaluate(ast, {});\n          type = this._castType(value);\n\n          if (type) return { type, value, raw: str };\n\n          break;\n\n        // Cast as expression\n        case ast.type === 'ArrayExpression' || ast.type === 'BinaryExpression':\n          return { type: 'expression', value: ast, raw: str };\n      }\n    } catch (err) {\n      dError('CAST EXPRESSION: raw = \"%s\" err = %s', str, err.stack);\n    }\n\n    return { type: 'unknown', value: str, raw: str };\n  }\n\n  protected _castType(value: any): LiteralType | null {\n    const type = typeof value;\n\n    switch (true) {\n      case value === null:\n        return 'null';\n\n      case Array.isArray(value):\n        return 'array';\n    }\n\n    switch (type) {\n      case 'string':\n        return 'string';\n      case 'object':\n        return 'object';\n      case 'number':\n        return 'number';\n      case 'boolean':\n        return 'boolean';\n      default:\n        return null;\n    }\n  }\n\n  protected _ensureValue(item: ParsedItem, context?: EvalContext): any {\n    switch (item.type) {\n      case 'variable':\n        return obj.get(context, item.value);\n\n      case 'expression':\n        return evaluate(item.value, context || {});\n\n      default:\n        return item.value;\n    }\n  }\n}\n","import * as array from './utils/array';\nimport timer from './utils/timer';\nimport tbag from './utils/tbag';\nimport {\n  EvalContext,\n  EvalResult,\n  Expression,\n  ExpressionJSON,\n  ExpressionOptions,\n} from './expression';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport { TraceBase } from './trace';\n\nexport type RuleOperation = 'OR' | 'AND';\n\nexport interface RuleOptions {\n  title: string;\n  operation: RuleOperation;\n  conditions: Array<string>;\n  operators: OperatorMap;\n  strict: boolean;\n}\n\nexport interface RuleMatchResult {\n  trace: Array<TraceCondition>;\n  error: boolean;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n  ms: number;\n  __t: object;\n}\n\nexport interface RuleJSON {\n  name: string;\n  title: string;\n  conditions: string[];\n  operation: string;\n}\n\nexport interface TraceCondition extends TraceBase {\n  type: 'condition';\n  item: ExpressionJSON;\n  result: EvalResult;\n}\n\nexport class Rule {\n  protected _title: string;\n  protected _operation: RuleOperation;\n  protected _conditions: Array<Expression>;\n  protected _conditionVariables: Array<string>;\n\n  constructor(options: Partial<RuleOptions>) {\n    this._title = options.title || 'Untitled Rule';\n\n    this._operation = options.operation || 'AND';\n\n    this._conditions = (options.conditions || []).map((exprStr) => {\n      const exprOptions: ExpressionOptions = {\n        strict: options.strict || false,\n        operators: options.operators || DEFAULT_OPERATORS,\n      };\n\n      exprOptions.strict = options.strict || false;\n      exprOptions.operators = options.operators || DEFAULT_OPERATORS;\n\n      return new Expression(exprStr, exprOptions);\n    });\n\n    this._conditionVariables = array.uniq(\n      array.flat(this._conditions.map((condition) => condition.variables)),\n    );\n  }\n\n  get name(): string {\n    return 'LiluRule';\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get conditionVariables(): Array<string> {\n    return [...this._conditionVariables];\n  }\n\n  get conditions(): Array<Expression> {\n    return this._conditions;\n  }\n\n  get operation(): string {\n    return this._operation;\n  }\n\n  match(context: EvalContext): RuleMatchResult {\n    const trace: Array<TraceCondition> = [];\n    const tRoot = tbag();\n    const matchTimer = timer();\n\n    const complete = (result: boolean): RuleMatchResult => {\n      const ms = matchTimer.click();\n\n      tRoot\n        .w('%s (Rule) %s / %dms', result ? '✅' : '🔴', this._title, ms)\n        .w('• MATCHED = %o', result);\n\n      return {\n        result,\n        trace,\n        error: false,\n        ms,\n        __t: tRoot,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): RuleMatchResult => {\n      const ms = matchTimer.click();\n\n      tRoot\n        .w('❌ (Rule) %d / ms', ms)\n        .w('• title = %o', this._title)\n        .w('• err_code = %d', errCode)\n        .w('• err_msg =')\n        .w('    - %s', errMsg.replace(/\\n/g, '\\n    - '));\n\n      return {\n        error: true,\n        errMsg,\n        errCode,\n        trace,\n        ms,\n        __t: tRoot,\n      };\n    };\n\n    let lastCondition = this._conditions[0];\n    let isError = false;\n    let lastErrCode = -1;\n    let lastErrMsg = '';\n    let isMatched: boolean;\n\n    let n = 1;\n\n    const conditionRun = (condition: Expression) => {\n      if (isError) return false;\n\n      lastCondition = condition;\n\n      const tCond = tRoot.child();\n      const r = condition.eval(context);\n\n      trace.push({\n        type: 'condition',\n        item: condition.toJSON(),\n        result: r,\n      });\n\n      tCond\n        .w('%s (Condition #%d)', r.error ? '❌' : r.result ? '✅' : '🔴', n++)\n        .child()\n        .table()\n        .label('\"%s\" = \"%o\"', condition.raw, r.error\n          ? `err: ${r.errCode}`\n          : r.result\n        )\n        .row()\n          .cell('type')\n          .cell('value')\n          .cell('ensured')\n        // .splitter()\n        .row()\n          .cell('@%s', r.stack.leftValue.type)\n          .cell('\"%s\"', r.stack.leftValue.raw || '@missed_left')\n          .cell('= \"%o\"', r.stack.leftValue.ensured)\n        .row()\n          .cell('@%s', r.stack.rightValue.type)\n          .cell('\"%s\"', r.stack.rightValue.raw || '@missed_right')\n          .cell('= \"%o\"', r.stack.rightValue.ensured)\n        .tableWrite()\n        .w('');\n\n      if (r.error) {\n        tCond\n          .w('• ERROR:')\n          .w('  • err_code = %d', r.errCode)\n          .w('  • err_msg = %s', r.errMsg)\n      }\n\n      if (r.error) {\n        isError = true;\n        lastErrCode = r.errCode || -1;\n        lastErrMsg = r.errMsg || 'unknown error';\n      }\n\n      return !r.error && r.result == true;\n    };\n\n    if (this.operation === 'OR') {\n      isMatched = this.conditions.some(conditionRun);\n    } else {\n      isMatched = this.conditions.every(conditionRun);\n    }\n\n    if (isError) {\n      return fail(\n        lastErrCode,\n        `condition[${lastCondition.raw}].eval()\\n${lastErrMsg || '@missed'}`,\n      );\n    }\n\n    return complete(isMatched);\n  }\n\n  toString(): string {\n    const conditions = this._conditions.join('\",\\n    \"');\n    return `${this.name}(\\n  title = \"${this._title}\"\\n  conditions = [\\n    \"${conditions}\"]\\n)`;\n  }\n\n  toJSON(): RuleJSON {\n    return {\n      name: this.name,\n      title: this.title,\n      operation: this.operation,\n      conditions: this.conditions.map((v) => v.raw),\n    };\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n}\n","import * as array from './utils/array';\nimport * as obj from './utils/object';\nimport tbag from './utils/tbag';\nimport { Rule, RuleJSON, RuleMatchResult, RuleOptions } from './rule';\nimport { EvalContext } from './expression';\nimport { TraceBase } from './trace';\nimport timer from './utils/timer';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\n\nexport interface PermissionAttributes {\n  [key: string]: any;\n}\n\nexport interface PermissionOptions {\n  strict: boolean,\n  operators: OperatorMap;\n  title: string;\n  actions: Array<string>;\n  attributes: PermissionAttributes;\n  rules: Array<Partial<RuleOptions>>;\n}\n\nexport interface PermissionJSON {\n  name: string;\n  attributes: PermissionAttributes;\n  rules: Array<RuleJSON>;\n  title: string;\n  actions: Array<string>;\n}\n\nexport interface TraceRule extends TraceBase {\n  type: 'rule';\n  item: RuleJSON;\n  result: RuleMatchResult;\n}\n\nexport interface PermissionMatchResult {\n  trace: Array<TraceRule>;\n  error: boolean;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n  ms: number;\n  __t: object;\n}\n\nexport class Permission {\n  protected _title: string;\n  protected _strict: boolean;\n  protected _actions: Array<string>;\n  protected _attributes: PermissionAttributes;\n  protected _rules: Array<Rule>;\n  protected _ruleVariables: Array<string>;\n\n  constructor(options: Partial<PermissionOptions>) {\n    this._title = options.title || 'Untitled Permission';\n\n    this._strict = options.strict || false;\n\n    this._actions = obj.clone(options.actions || []);\n\n    this._attributes = obj.clone(options.attributes || {});\n\n    this._rules = (options.rules || []).map((opts) => {\n      const ruleOptions = {\n        ...opts,\n        strict: options.strict || false,\n        operators: options.operators || DEFAULT_OPERATORS\n      }\n\n      return new Rule(ruleOptions);\n    });\n\n    this._ruleVariables = array.uniq(\n      array.flat(this._rules.map((rule) => rule.conditionVariables)),\n    );\n  }\n\n  get name(): string {\n    return 'LiluPermission';\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get actions(): Array<string> {\n    return obj.clone(this._actions);\n  }\n\n  get ruleVariables(): Array<string> {\n    return obj.clone(this._ruleVariables);\n  }\n\n  get attributes(): PermissionAttributes {\n    return obj.clone(this._attributes);\n  }\n\n  check(context: EvalContext): PermissionMatchResult {\n    const tRoot = tbag();\n    const trace: Array<TraceRule> = [];\n    const startTimer = timer();\n\n    const complete = (result: boolean): PermissionMatchResult => {\n      const ms = startTimer.click();\n      const symPrefix = result ? '✅' : '🔴';\n\n      tRoot\n        .w('%s (Permission) %s / %dms', symPrefix, this._title, ms)\n        .w('• PASSED = %o', result);\n\n      return {\n        error: false,\n        result,\n        ms,\n        trace,\n        __t: tRoot,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): PermissionMatchResult => {\n      const ms = startTimer.click();\n\n      tRoot\n        .w('❌ (Permission) / %dms', ms)\n        .w('• title = %o', this.title)\n        .w('• err_code = %d', errCode)\n        .w('• err_msg = %s', errMsg)\n        .w('• context = %s', JSON.stringify(context, null, 2).replace(/\\n/g, '\\n  '));\n\n      return {\n        error: true,\n        errCode,\n        errMsg,\n        ms,\n        trace,\n        __t: tRoot,\n      };\n    };\n\n    if (this._strict) {\n      const missedContextKey = this._ruleVariables.find(\n        (keyPath) => obj.get(context, keyPath) === undefined,\n      );\n\n      if (missedContextKey) {\n        return fail(6, `missed context variable: ${missedContextKey}`);\n      }\n    }\n\n    for (const rule of this._rules) {\n      let hasTraced = false;\n\n      try {\n        const r = rule.match(context);\n\n        tRoot.attach(r.__t);\n\n        trace.push({\n          type: 'rule',\n          item: rule.toJSON(),\n          result: r,\n        });\n        hasTraced = true;\n\n        if (r.error) {\n          return fail(\n            r.errCode as number,\n            `error while \"${rule.title}\" match.`,\n          );\n        }\n\n        if (!r.result) {\n          return complete(false);\n        }\n      } catch (err) {\n        if (!hasTraced) {\n          trace.push({\n            type: 'rule',\n            item: rule.toJSON(),\n            result: {\n              error: true,\n              errCode: -1,\n              errMsg: err.message,\n              ms: 0,\n              trace: [],\n              __t: tbag(),\n            },\n          });\n        }\n        return fail(\n          -1,\n          `critical error while match${rule.toString()}\\n${err.stack}`,\n        );\n      }\n    }\n\n    return complete(true);\n  }\n\n  toString(): string {\n    const actions = this._actions.join('\", \"');\n    const rules = this._rules.map((v) => v.toString()).join('\", \"');\n\n    return `${this.name}(\\n  title = \"${this._title}\"\\n  actions = [\"${actions}\"]\\n rules =  [\"${rules}\"]\\n)`;\n  }\n\n  toJSON(): PermissionJSON {\n    return {\n      name: this.name,\n      title: this.title,\n      actions: this.actions,\n      attributes: this.attributes,\n      rules: this._rules.map((v) => v.toJSON()),\n    };\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n}\n","export class LiluTimeoutError extends Error {\n  public name: string;\n  public code: number;\n\n  constructor(message: string, code?: number) {\n    super(message);\n\n    this.name = 'LiluTimeoutError';\n    this.code = code || -1;\n  }\n\n  toString(): string {\n    return `${this.name}(${this.code}, ${this.message})`;\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      code: this.code\n    });\n  }\n\n  inspect(): object {\n    return Object.assign(new Error(this.message), this);\n  }\n}\n","import { LiluTimeoutError } from '../errors/LiluTimeoutError';\n\nexport default function promiseTimeout(promise, timeoutMillis, message) {\n  let error = new LiluTimeoutError(message || 'Timeout error', 7);\n  let timeout;\n\n  return Promise.race([\n    promise,\n    new Promise(function(resolve, reject) {\n      timeout = setTimeout(function() {\n        reject(error);\n      }, timeoutMillis);\n    }),\n  ]).then(function(v) {\n    clearTimeout(timeout);\n    return v;\n  }, function(err) {\n    clearTimeout(timeout);\n    throw err;\n  });\n}\n","import { TracePermission } from '../lilu';\n\nexport class LiluGrantedError extends Error {\n  public name: string;\n  public code: number;\n  public trace: Array<TracePermission>;\n  public execStack: string;\n  public originErr: Error | null;\n\n  constructor(\n    message: string,\n    code?: number,\n    trace?: Array<TracePermission>,\n    execStack?: string,\n    originErr?: Error,\n  ) {\n    super(message);\n\n    this.name = 'LiluGrantedError';\n    this.code = code || -1;\n    this.trace = trace || [];\n    this.execStack = execStack || '';\n    this.originErr = originErr || null;\n  }\n\n  get critical() {\n    return this.code === -1;\n  }\n\n  toString(): string {\n    return `${this.name}(${this.code}, ${this.message})\\n${\n      this.originErr ? `- Origin Error: ${this.originErr.stack}\\n` : ''\n    }- Exec Stack:\\n${this.execStack || '_empty_'}`;\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      code: this.code,\n      critical: this.critical,\n      originErr: this.originErr ? Object.assign({}, this.originErr) : null,\n      trace: this.trace,\n      execStack: this.execStack,\n    });\n  }\n\n  inspect(): object {\n    return Object.assign(new Error(this.message), this);\n  }\n}\n","import debug from 'debug';\nimport globToRegExp from 'glob-to-regexp';\n\nimport * as obj from './utils/object';\nimport timer from './utils/timer';\nimport tbag from './utils/tbag';\nimport promiseOrCallback from './utils/promiseOrCallback';\nimport { EvalContext } from './expression';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport {\n  Permission,\n  PermissionJSON,\n  PermissionMatchResult,\n  PermissionOptions,\n} from './permission';\nimport { TraceBase } from './trace';\nimport promiseTimeout from './utils/promiseTimeout';\nimport { LiluGrantedError } from './errors/LiluGrantedError';\n\nconst d = debug('lilu:permission');\n\nexport interface LiluOperators {\n  [key: string]: (left: any, b: any) => boolean;\n}\n\nexport interface LiluEnviroment {\n  [key: string]: any;\n}\n\nexport interface LiluOptions {\n  strict: boolean;\n  timeout: number | false;\n  operators: OperatorMap | Array<string>;\n  enviroment: LiluEnviroment;\n  permissions: Array<Partial<PermissionOptions>>;\n}\n\ninterface GrantedOptions {\n  enviroment: LiluEnviroment;\n  timeout: number | false;\n  context: EvalContext;\n}\n\ninterface GrantedResultError {\n  errCode: number;\n  errMsg: string;\n}\n\ninterface GrantedTrace {\n  toString: () => string;\n  toJSON: () => Array<object>;\n}\n\ninterface GrantedResult {\n  passed: boolean;\n  timeout: boolean;\n  errors: Array<GrantedResultError>;\n  nErrors: number;\n  permission: PermissionJSON | null;\n  mismatched: Array<PermissionJSON>;\n  ms: number;\n  trace: GrantedTrace;\n  __t: object;\n}\n\ntype GrantedCallback = (err: Error, passed: boolean) => void;\n\nexport interface TracePermission extends TraceBase {\n  type: 'permission';\n  item: PermissionJSON;\n  result: PermissionMatchResult;\n}\n\nexport class Lilu {\n  protected _strict: boolean;\n\n  protected _timeout: number | false;\n\n  protected _enviroment: LiluEnviroment;\n\n  protected _operators: LiluOperators;\n\n  protected _permissionsByActionMap: Map<string, Array<Permission>>;\n\n  protected _permissions: Array<Permission>;\n\n  constructor(options?: Partial<LiluOptions>) {\n    options = options || {};\n\n    this._strict = options.strict || false;\n    this._timeout = options.timeout || false;\n    this._enviroment = obj.clone(options.enviroment || {});\n    this._operators = obj.clone(options.operators || DEFAULT_OPERATORS);\n\n    if (Array.isArray(options.operators)) {\n      this._operators = obj.pick(\n        DEFAULT_OPERATORS,\n        this._operators,\n      ) as LiluOperators;\n    }\n\n    this._permissionsByActionMap = new Map();\n    this._permissions = (options.permissions || []).map((permissionOptions) => {\n      const opts = {\n        ...permissionOptions,\n        operators: this._operators,\n        strict: this._strict,\n      };\n\n      const permission = new Permission(opts);\n\n      for (const actionName of permission.actions) {\n        const list = this._permissionsByActionMap.get(actionName) || [];\n\n        list.push(permission);\n\n        this._permissionsByActionMap.set(actionName, list);\n      }\n\n      return permission;\n    });\n  }\n\n  get permissions(): Array<Permission> {\n    return [...this._permissions];\n  }\n\n  findActions(value: string | RegExp): Array<string> {\n    const startTimer = timer();\n\n    let pattern: RegExp | null = null;\n\n    if (typeof value === 'string') {\n      pattern = globToRegExp(value, { extended: true });\n    }\n\n    if (!(pattern instanceof RegExp)) {\n      throw new TypeError(\n        'Failed to find actions, the value argument expected as regexp or string.',\n      );\n    }\n\n    const list: Array<string> = [];\n\n    for (const value of this._permissionsByActionMap.keys()) {\n      if (pattern.test(value)) {\n        list.push(value);\n      }\n    }\n\n    const ms = startTimer.click();\n\n    d(\n      'FIND ACTIONS: (%dms)\\n  VALUE = %o\\n  PATTERN = %o\\n  RESULT: %o',\n      ms,\n      value,\n      pattern,\n      list,\n    );\n\n    return list;\n  }\n\n  granted(\n    actionName: string,\n    optionsOrContextOrCallback?:\n      | EvalContext\n      | Partial<GrantedOptions>\n      | GrantedCallback,\n    cb?: GrantedCallback,\n  ): Promise<GrantedResult> {\n    let callback: GrantedCallback | undefined = cb;\n\n    const options: GrantedOptions = {\n      timeout: this._timeout || false,\n      enviroment: this._enviroment || {},\n      context: {},\n    };\n\n    if (typeof actionName !== 'string') {\n      throw new TypeError('First argument \"actionName\" expected as String.');\n    }\n\n    if (typeof optionsOrContextOrCallback === 'function') {\n      callback = optionsOrContextOrCallback as GrantedCallback;\n    } else if (\n      optionsOrContextOrCallback &&\n      optionsOrContextOrCallback.context\n    ) {\n      Object.assign(options, optionsOrContextOrCallback);\n    } else if (typeof optionsOrContextOrCallback === 'object') {\n      options.context = optionsOrContextOrCallback;\n    }\n\n    const self = this;\n\n    return promiseOrCallback(callback, function() {\n      const cb = arguments[0] as (err?: Error | null, result?: object) => void;\n      self._granted(actionName, options).then(cb.bind(null, null), cb);\n    });\n  }\n\n  async _granted(\n    actionName: string,\n    options: GrantedOptions,\n  ): Promise<GrantedResult> {\n    const {\n      enviroment = this._enviroment,\n      timeout = this._timeout,\n      context = {},\n    } = options;\n\n    const errors: Array<GrantedResultError> = [];\n    const mismatched: Array<PermissionJSON> = [];\n    const trace: Array<TracePermission> = [];\n    const tRoot = tbag();\n    const tChild = tRoot.child();\n\n    let isTimeout = false;\n\n    const startTimer = timer();\n\n    const permissionsList = this._permissionsByActionMap.get(actionName) || [];\n\n    const complete = (permission?: Permission): GrantedResult => {\n      const ms = startTimer.click();\n      const passed = !!permission;\n\n      return {\n        passed,\n        timeout: isTimeout,\n        permission: permission ? permission.toJSON() : null,\n        mismatched,\n        errors,\n        nErrors: errors.length,\n        ms,\n        trace: {\n          toString: () => tRoot.collect(),\n          toJSON: () => obj.clone(trace),\n        },\n        __t: tRoot,\n      };\n    };\n\n    const wholeContext: EvalContext = obj.clone(context);\n\n    const ensurePermissionVariables = async (permission: Permission) => {\n      for (const variableName of permission.ruleVariables) {\n        const contextValue = obj.get(wholeContext, variableName);\n\n        if (contextValue !== undefined) {\n          continue;\n        }\n\n        let enviromentValue = obj.get(enviroment, variableName);\n\n        if (typeof enviromentValue === 'function') {\n          try {\n            enviromentValue = await enviromentValue.call(enviroment);\n          } catch (err) {\n            enviromentValue = err;\n            // TO-DO: Log error into tbag\n          }\n        }\n\n        if (enviromentValue !== undefined) {\n          obj.set(wholeContext, variableName, enviromentValue);\n        }\n      }\n    };\n\n    const handlePermission = async (\n      permission: Permission,\n    ): Promise<boolean> => {\n      await ensurePermissionVariables(permission);\n\n      const r = permission.check(wholeContext);\n\n      tRoot\n        .attach(r.__t)\n        .w('• ACTION = %s', actionName);\n\n      trace.push({\n        type: 'permission',\n        item: permission.toJSON(),\n        result: r,\n      });\n\n      if (r.error) {\n        errors.push({\n          errCode: r.errCode || -1,\n          errMsg: r.errMsg || 'unknown error',\n        });\n\n        return false;\n      } else if (!r.result) {\n        mismatched.push(permission.toJSON());\n      }\n\n      return !!r.result;\n    };\n\n    for (const permission of permissionsList) {\n      let passed = false;\n\n      try {\n        if (timeout) {\n          const timeoutLeft = timeout - startTimer.click();\n\n          passed = await promiseTimeout(\n            handlePermission(permission),\n            timeoutLeft,\n            `timeout - ${permission.title}`,\n          );\n        } else {\n          passed = await handlePermission(permission);\n        }\n      } catch (err) {\n        const errCode = err.code || -1;\n        const errMsg = err.message;\n        const isTimeoutError = err.name === 'LiluTimeoutError';\n        const isCriticalError = !isTimeoutError && errCode === -1;\n\n        if (isTimeoutError) isTimeout = true;\n\n        tChild\n          .w(isTimeoutError ? '⏰ (Permission)' : '❌❌❌ (Permission)')\n          .w('• title = %s', permission.title)\n          .w('• err_code = %d', errCode)\n          .w('• err_msg = %s', errMsg)\n          .w('• context = %s', JSON.stringify(wholeContext, null, 2).replace(/\\n/g, '\\n  '));\n\n        if (isCriticalError) {\n          throw new LiluGrantedError(\n            errCode,\n            errMsg,\n            trace,\n            tRoot.collect(),\n            err,\n          );\n        }\n\n        errors.push({ errCode, errMsg });\n      }\n\n      if (passed) {\n        return complete(permission);\n      }\n    }\n\n    return complete();\n  }\n}\n"],"names":["array.flat","debug","obj.clone","esprima","evaluate","obj.get","array.uniq","tbag","d","obj.pick","globToRegExp","obj.set"],"mappings":"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"}