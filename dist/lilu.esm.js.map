{"version":3,"file":"lilu.esm.js","sources":["../lib/utils/object.js","../lib/utils/timer.ts","../lib/utils/array.js","../lib/utils/format.js","../lib/utils/text-table.js","../lib/utils/tbag.js","../lib/utils/promiseOrCallback.js","../lib/operators.ts","../lib/errors/LiluExpressionError.ts","../lib/expression.ts","../lib/rule.ts","../lib/permission.ts","../lib/errors/LiluTimeoutError.ts","../lib/utils/promiseTimeout.js","../lib/errors/LiluGrantedError.ts","../lib/lilu.ts"],"sourcesContent":["import cloneDeep from 'clone-deep';\n\nexport { cloneDeep as clone };\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nexport function set(obj, path, value) {\n  if (Object(obj) !== obj) return obj;\n  // If not yet an array, get the keys from the string-path\n  if (!Array.isArray(path)) path = path.toString().match(/[^.[\\]]+/g) || [];\n\n  path.slice(0,-1).reduce((a, c, i) => // Iterate all of them except the last one\n   Object(a[c]) === a[c] // Does the key exist and is its value an object?\n       // Yes: then follow that path\n       ? a[c]\n       // No: create the key. Is the next key a potential array-index?\n       : a[c] = Math.abs(path[i+1])>>0 === +path[i+1]\n             ? [] // Yes: assign a new array object\n             : {}, // No: assign a new plain object\n   obj)[path[path.length-1]] = value; // Finally assign the value to the last key\n\n  return obj; // Return the top-level object to allow chaining\n}\n\nexport function get(obj, path, defaultValue = undefined) {\n  const travel = regexp =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj);\n\n  const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n\n  return result === undefined || result === obj ? defaultValue : result;\n}\n\nexport function pick(obj, list) {\n  const result = {};\n\n  for(const key of list) {\n    result[key] = get(obj, key);\n  }\n\n  return result;\n}\n\nexport function defineGetter(obj, key, getterFn) {\n  delete obj[key];\n\n  Object.defineProperty(obj, key, {\n    get: getterFn,\n    enumerable: true,\n    configurable: true\n  });\n}\n","export default function timer() {\n  let startAt = Date.now();\n\n  const instance = {\n    reset: () => {\n      startAt = Date.now();\n\n      return instance;\n    },\n    click: () => Date.now() - startAt\n  };\n\n  return instance;\n}\n","export function uniq(arr) {\n  return [...new Set(arr)];\n}\n\nexport function pull(items, valuesToRemove) {\n  return items.filter(item => !valuesToRemove.includes(item));\n}\n\nexport function flat(arr, depth) {\n  depth = isNaN(depth) ? 1 : Number(depth);\n\n  return depth ? Array.prototype.reduce.call(arr, function(acc, cur) {\n    if (Array.isArray(cur)) {\n      acc.push.apply(acc, flat(cur, depth - 1));\n    } else {\n      acc.push(cur);\n    }\n\n    return acc;\n  }, []) : Array.prototype.slice.call(arr);\n}\n","export default function format(fmt, ...args) {\n  const re = /(%?)(%([jdsoO]))/g;\n\n  if (args.length) {\n    fmt = fmt.replace(re, (match, escaped, ptn, flag) => {\n      let arg = args.shift();\n      switch(flag) {\n        case 's':\n          arg = '' + arg;\n          break;\n        case 'd':\n          arg = Number(arg);\n          break;\n        case 'j':\n          arg = JSON.stringify(arg);\n          break;\n        case 'o':\n          arg = JSON.stringify(arg);\n          break;\n        case 'O':\n          arg = JSON.stringify(arg, null, 2);\n          break;\n      }\n      if(!escaped) {\n        return arg;\n      }\n      args.unshift(arg);\n      return match;\n    })\n  }\n\n  if (args.length) {\n    fmt += ' ' + args.join(' ');\n  }\n\n  // update escaped %% values\n  fmt = fmt.replace(/%{2}/g, '%');\n\n  return '' + fmt;\n}\n","import format from './format';\n\nexport default function textTable() {\n  const rows = [];\n  const instance = this;\n\n  let MAX_LENGTH_PER_CELL = [];\n  let MAX_LINES_PER_ROWS = [];\n  let MAP_IS_ROW_LABEL = [];\n  let MAX_CELL_AMOUNT = 0;\n\n  const api = {\n    row: createRow,\n    label: createLabel,\n    tableWrite: complete\n  };\n\n  function complete() {\n    const isLabelFirst = !!MAP_IS_ROW_LABEL[0];\n    const isLabelLast = !!MAP_IS_ROW_LABEL[rows.length - 1];\n\n    const maxLabelLength = Math.max(0,\n      ...rows\n        .filter((v, idx) => !!MAP_IS_ROW_LABEL[idx])\n        .map(row => Math.max(...row[0].map(v => v.length)))\n    );\n\n    const maxRowLength = MAX_LENGTH_PER_CELL.reduce((a, b) => a + b, 0);\n\n    if (maxLabelLength > maxRowLength) {\n      const avgDiff = Math.round((maxLabelLength - maxRowLength) / MAX_CELL_AMOUNT);\n      MAX_LENGTH_PER_CELL = MAX_LENGTH_PER_CELL.map(v => v + avgDiff);\n    }\n\n    const start = '┌' + MAX_LENGTH_PER_CELL\n      .map(len => ''.padStart(len + 2, '─'))\n      .join(isLabelFirst ? '─' : '┬') + '┐\\n';\n\n    const end = '\\n└' + MAX_LENGTH_PER_CELL\n      .map(len => ''.padStart(len + 2, '─'))\n      .join(isLabelLast ? '─' : '┴') + '┘';\n\n    const result = ''\n      + start\n      + rows.map((row, rowIdx) => {\n        const lines = [];\n        const isLabel = !!MAP_IS_ROW_LABEL[rowIdx];\n        const isNextLabel = !!MAP_IS_ROW_LABEL[rowIdx + 1];\n        const isLastRow = rowIdx === (rows.length - 1);\n\n        const rowSplitter = '\\n├' + MAX_LENGTH_PER_CELL\n          .map(len => ''.padStart(len + 2, '─'))\n          .join(\n            isLabel\n              ? (isLastRow || isNextLabel ? '─' : '┬')\n              : (isNextLabel ? '┴' : '┼')\n          ) + '┤\\n';\n\n        const cellSplitter = isLabel\n          ? '   '\n          : ' │ ';\n\n        for (let lineIdx = 0; lineIdx < MAX_LINES_PER_ROWS[rowIdx]; lineIdx++) {\n          const cells = [];\n\n          for (let cellIdx = 0; cellIdx < MAX_CELL_AMOUNT; cellIdx++) {\n            const coll = row[cellIdx]\n              ? (row[cellIdx][lineIdx] ? row[cellIdx][lineIdx] : '')\n              : '';\n\n            if (isLabel) {\n              const maxLen = (\n                MAX_LENGTH_PER_CELL.reduce((a, b) => a + b, 0) +\n                Math.max((MAX_LENGTH_PER_CELL.length - 1) * 3, 0)\n              );\n              cells.push(coll.padEnd(maxLen, ' '));\n              break;\n            } else {\n              const maxLen = MAX_LENGTH_PER_CELL[cellIdx];\n              cells.push(coll.padEnd(maxLen, ' '));\n            }\n          }\n\n          lines.push('│ ' + cells.join(cellSplitter) + ' │');\n        }\n\n        return lines.join('\\n') + (isLastRow ? '' : rowSplitter);\n      }).join('')\n      + end\n    ;\n\n    return instance.w(result);\n  }\n\n  function createCell(rowIdx, fmt, ...args) {\n    const row = rows[rowIdx];\n    const lines = format(String(fmt), ...args).split('\\n');\n    const cellIdx = row.length;\n\n    MAX_LENGTH_PER_CELL[cellIdx] = Math.max(\n      MAX_LENGTH_PER_CELL[cellIdx] || 0,\n      ...lines.map(v => v.length)\n    );\n\n    MAX_LINES_PER_ROWS[rowIdx] = Math.max(\n      MAX_LINES_PER_ROWS[rowIdx] || 0,\n      lines.length\n    );\n\n    MAX_CELL_AMOUNT = Math.max(MAX_CELL_AMOUNT, cellIdx + 1);\n    row.push(lines);\n\n    return {\n      ...api,\n      cell: createCell.bind(null, rowIdx)\n    }\n  }\n\n  function createRow() {\n    const row = [];\n    const rowIdx = rows.push(row) - 1;\n\n    return {\n      ...api,\n      cell: createCell.bind(null, rowIdx)\n    }\n  }\n\n  function createLabel(fmt, ...args) {\n    createRow();\n    const rowIdx = rows.length - 1;\n\n      const cellLength = MAX_LENGTH_PER_CELL[0] || 0;\n      createCell(rowIdx, fmt || '', ...args);\n      MAX_LENGTH_PER_CELL[0] = cellLength;\n      MAP_IS_ROW_LABEL[rowIdx] = true;\n\n    return api;\n  }\n\n  return api;\n}\n","import * as array from './array';\nimport format from './format';\nimport textTable from './text-table';\n\nconst chr = function(s) {\n  return s;\n};\n\nexport default function createTBag() {\n  const rootChilds = [];\n  const lines = [];\n\n  const collect = ({ lines, childs }, prefix = '') => {\n    if (!lines || !lines.length && childs && childs.length) {\n      lines = array.flat(childs.map(v => v.lines));\n      childs = array.flat(childs.map(v => v.childs));\n\n      return collect({ lines, childs }, prefix);\n    }\n\n    const splitter = prefix\n      ? '\\n' + prefix + (childs.length ? chr('│') : ' ') + ' '\n      : '\\n';\n\n    return prefix\n      + lines.join(splitter) + '\\n'\n      + childs.map(function(child, ix) {\n        const last = ix === childs.length - 1;\n        const more = child.childs && child.childs.length;\n        const prefix_ = prefix + (last ? ' ' : chr('│')) + ' ';\n\n        return prefix\n          + (last ? chr('└') : chr('├')) + chr('─')\n          + (more ? chr('┬') : chr('─')) + ' '\n          + collect(child, prefix_).slice(prefix.length + 2)\n          ;\n      }).join('')\n      ;\n  };\n\n  const rootCollect = () => collect({ lines, childs: rootChilds });\n\n  return {\n    w(...args) {\n      const line = format(...args);\n      lines.push(...line.split('\\n'));\n      return this;\n    },\n    table: textTable,\n    a(...args) {\n      const line = format(...args);\n      lines.unshift(...line.split('\\n'));\n      return this;\n    },\n    attach(instance, prepend = false) {\n      return this.child(instance, prepend);\n    },\n    merge(instance) {\n      lines.push(...instance.lines);\n      rootChilds.push(...instance.childs);\n      return this;\n    },\n    child(instance, prepend = false) {\n      instance = instance || createTBag();\n\n      instance.isChild = true;\n      instance.collect = this.isChild\n        ? this.collect\n        : rootCollect;\n\n      if (prepend) {\n        rootChilds.unshift(instance);\n      } else {\n        rootChilds.push(instance);\n      }\n\n      return instance;\n    },\n    childs: rootChilds,\n    lines: lines,\n    collect: rootCollect,\n    str: () => collect({ lines, childs: rootChilds })\n  }\n}\n\n/*\nconst t = createTBag();\n\nconsole.log(\nt\n  .table()\n  .row()\n    .cell('header 1')\n    .cell('header 2')\n    .cell('header 3')\n  .row()\n    .cell('cell 1\\ntest')\n    .cell('cell 2')\n    .cell('cell 3 qewr q,lw;r qlwr m;qwlrm lqr; qwlr q;lwrm')\n  .row()\n    .cell('cell 1')\n    .cell('cell 2')\n    .cell('cell 3')\n  .tableWrite()\n  .child()\n  .w('test 1')\n  .w('test 2')\n  .w('test 3')\n  .child()\n  .w('test 2.1')\n  .w('test 2.2')\n  .w('test 2.3')\n  .collect()\n);\n*/\n","export default function promiseOrCallback(callback, fn) {\n  if (typeof callback === 'function') {\n    return fn(function(error) {\n      if (error != null) {\n        try {\n          callback(error);\n        } catch (error) {\n          return process.nextTick(() => {\n            throw error;\n          });\n        }\n        return;\n      }\n      callback.apply(this, arguments);\n    });\n  }\n\n  return new Promise((resolve, reject) => {\n    fn(function(error, res) {\n      if (error !== null) {\n        return reject(error);\n      }\n      if (arguments.length > 2) {\n        return resolve(Array.prototype.slice.call(arguments, 1));\n      }\n      resolve(res);\n    });\n  });\n}\n","export type OperatorHandler = (left: any, right: any) => boolean\n\nexport interface OperatorMap {\n  [key: string]: OperatorHandler\n}\n\nexport const DEFAULT_OPERATORS: OperatorMap = {\n  '>': (leftValue: any, rightValue: any) => {\n    return leftValue > rightValue;\n  },\n\n  '>=': (leftValue: any, rightValue: any) => {\n    return leftValue > rightValue;\n  },\n\n  '<': (leftValue: any, rightValue: any) => {\n    return leftValue < rightValue;\n  },\n\n  '<=': (leftValue: any, rightValue: any) => {\n    return leftValue <= rightValue;\n  },\n\n  '==': (leftValue: any, rightValue: any) => {\n    return leftValue === rightValue;\n  },\n\n  '!=': (leftValue: any, rightValue: any) => {\n    return leftValue !== rightValue;\n  },\n\n  'in': (leftValue: any, rightValue: any) => {\n    if (!Array.isArray(leftValue)) leftValue = [leftValue];\n    if (!Array.isArray(rightValue)) rightValue = [rightValue];\n\n    return leftValue.some((value: any) => rightValue.indexOf(value) > -1);\n  }\n};\n","export class LiluExpressionError extends Error {\n  name: string;\n  expressionText: string | null;\n  code: number;\n\n  constructor(message: string, expressionText?: string, code?: number) {\n    super(message);\n\n    this.name = 'LiluExpressionError';\n    this.expressionText = expressionText || null;\n    this.code = code || -1;\n  }\n\n  toString(): string {\n    return `${this.name}(${this.code}, \"${this.expressionText}\", ${this.message})`;\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      expressionText: this.expressionText,\n      code: this.code\n    });\n  }\n}\n","import debug from 'debug';\nimport evaluate from 'static-eval';\nimport esprima from 'esprima';\nimport * as ESTree from 'estree';\n\nimport * as obj from './utils/object';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport { LiluExpressionError } from './errors/LiluExpressionError';\n\nconst d = debug('lilu:expression');\nconst dError = debug('lilu:expression:error');\n\n// eslint-disable-next-line no-useless-escape\nconst EXPRESSION_REG_EXP = /({{(.*?)}}|\\[.*?]|\".*?\"|[^\\s]+)/g;\n\nexport interface ExpressionOptions {\n  strict: boolean;\n  operators: OperatorMap;\n}\n\nexport interface EvalContext {\n  [key: string]: any;\n}\n\nexport interface EvalStack {\n  leftValue: { raw: null | string; ensured: any, type: string };\n  rightValue: { raw: null | string; ensured: any, type: string };\n  operator: null | string;\n}\n\nexport interface EvalResult {\n  error: boolean;\n  stack: EvalStack;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n}\n\nexport interface ParsedBase {\n  type: string;\n  raw: string;\n  value: any;\n}\n\nexport interface ParsedVariable extends ParsedBase {\n  type: 'variable';\n  value: string;\n}\n\nexport interface ParsedExpression extends ParsedBase {\n  type: 'expression';\n  value: ESTree.Expression;\n}\n\nexport interface ParsedOperator extends ParsedBase {\n  type: 'operator';\n  value: string;\n}\n\nexport interface ParsedLiteral extends ParsedBase {\n  type: LiteralType;\n  value: LiteralValue;\n}\n\nexport interface ParsedUnknown extends ParsedBase {\n  type: 'unknown';\n  value: any;\n}\n\nexport interface ExpressionJSON {\n  str: string;\n  variables: Array<string>;\n  operators: string[];\n  isValid: boolean;\n  name: string;\n}\n\nexport type LiteralType =\n  | 'string'\n  | 'object'\n  | 'number'\n  | 'boolean'\n  | 'array'\n  | 'null';\n\nexport type LiteralValue =\n  | string\n  | object\n  | Array<any>\n  | number\n  | boolean\n  | null;\n\nexport type ParsedItem =\n  | ParsedVariable\n  | ParsedExpression\n  | ParsedOperator\n  | ParsedLiteral\n  | ParsedUnknown;\n\nexport const EXPRESSION_LITERAL_TYPES = [\n  'string',\n  'number',\n  'boolean',\n  'object',\n  'variable',\n  'expression',\n  'array',\n  'null',\n];\n\nexport class Expression {\n  protected _raw: string;\n  protected _parsed: Array<ParsedItem>;\n  protected _variables: Array<string>;\n  protected _operators: OperatorMap;\n\n  constructor(str: string, options?: Partial<ExpressionOptions>) {\n    options = options || {};\n\n    this._raw = str;\n    this._parsed = [];\n    this._variables = [];\n    this._operators = obj.clone(options.operators || DEFAULT_OPERATORS);\n\n    this._parse();\n    this._validateAndThrow();\n  }\n\n  get name(): string {\n    return 'LiLuExpression';\n  }\n\n  get raw(): string {\n    return this._raw;\n  }\n\n  get variables(): Array<string> {\n    return [...this._variables];\n  }\n\n  get isValid(): boolean {\n    try {\n      this._validateAndThrow();\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  toString(): string {\n    return `${this.name}(${this._raw}): VALID = ${\n      this.isValid\n    } VARS = ${this._variables.join(', ')}`;\n  }\n\n  toJSON(): ExpressionJSON {\n    return {\n      name: this.name,\n      str: this.raw,\n      variables: this.variables,\n      operators: Object.keys(this._operators),\n      isValid: this.isValid,\n    };\n  }\n\n  eval(context?: EvalContext): EvalResult {\n    context = context || {};\n\n    const stack: EvalStack = {\n      operator: null,\n      leftValue: { raw: null, ensured: null, type: 'unknown' },\n      rightValue: { raw: null, ensured: null, type: 'unknown' },\n    };\n\n    const complete = (result: boolean): EvalResult => {\n      return {\n        error: false,\n        result,\n        stack,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): EvalResult => {\n      return {\n        error: true,\n        errMsg,\n        errCode,\n        stack,\n      };\n    };\n\n    try {\n      const left = this._parsed[0];\n      const operator = this._parsed[1] as ParsedOperator;\n      const right = this._parsed[2];\n\n      stack.leftValue.raw = left.raw;\n      stack.leftValue.type = left.type;\n\n      stack.rightValue.raw = right.raw;\n      stack.rightValue.type = right.type;\n\n      stack.leftValue.ensured = this._ensureValue(left, context);\n      stack.rightValue.ensured = this._ensureValue(right, context);\n\n      stack.operator = operator.value;\n\n      const operatorFn = this._operators[operator.value];\n\n      if (typeof operatorFn !== 'function') throw new Error(\n        `Attempt to eval with unknown operator: ${this._raw}`\n      );\n\n      const result: boolean = operatorFn(\n        stack.leftValue.ensured,\n        stack.rightValue.ensured,\n      );\n\n      d(\n        '%s %s %s RESULT = %s\\n    BY VALUES:\\n      \"%s\" = %o\\n      \"%s\" = %o',\n        stack.leftValue.raw,\n        stack.operator,\n        stack.rightValue.raw,\n        result,\n        stack.leftValue.raw,\n        stack.leftValue.ensured,\n        stack.rightValue.raw,\n        stack.rightValue.ensured,\n      );\n\n      return complete(result);\n    } catch (err) {\n      dError(\n        'EVAL ERROR\\n  raw = \"%s\"\\n  context = %O\\n  err = %O',\n        this._raw,\n        context,\n        err,\n      );\n\n      return fail(err.code || -1, err.stack);\n    }\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n\n  protected _validateAndThrow(): boolean {\n    if (this._parsed === null) {\n      this._parse();\n    }\n\n    if (!this._parsed || !Array.isArray(this._parsed)) {\n      throw new LiluExpressionError(\n        'Unknown error while parsing an expression.',\n        this._raw,\n      );\n    }\n\n    const raw = this._raw;\n    const parsed = this._parsed;\n\n    const isLiteral = (type: string) =>\n      EXPRESSION_LITERAL_TYPES.indexOf(type) > -1;\n\n    switch (true) {\n      case parsed.length !== 3:\n        throw new LiluExpressionError(\n          `Expect 3 parts of expression, parsed: ${parsed.length}`,\n          raw,\n        );\n\n      case !isLiteral(parsed[0].type):\n        throw new LiluExpressionError(\n          `The first part of expression expected to be ${JSON.stringify(\n            EXPRESSION_LITERAL_TYPES,\n          )} parsed as: ${parsed[0].type}`,\n          raw,\n        );\n\n      case parsed[1].type !== 'operator':\n        throw new LiluExpressionError(\n          `The second part of expression expected to be an operator, parsed as: ${parsed[1].type}.`,\n          raw,\n        );\n\n      case typeof this._operators[parsed[1].value] !== 'function':\n        throw new LiluExpressionError(\n          `The second part of expression is unknown operator: ${parsed[1].value}.`,\n          raw,\n        );\n\n      case !isLiteral(parsed[2].type):\n        throw new LiluExpressionError(\n          `The third part of expression expected to be ${JSON.stringify(\n            EXPRESSION_LITERAL_TYPES,\n          )} parsed as: ${parsed[2].type}`,\n          raw,\n        );\n\n      default:\n        return true;\n    }\n  }\n\n  protected _parse(): void {\n    const parsed: Array<ParsedItem> = [];\n    const variables: Array<string> = [];\n\n    d('PARSE LINE = \"%s\"', this._raw);\n\n    let matches;\n\n    while ((matches = EXPRESSION_REG_EXP.exec(this._raw)) !== null) {\n      const str = (matches[3] || matches[2] || matches[1] || 'null').trim();\n\n      let parsedItem: ParsedItem;\n\n      if (!matches || !matches[0]) {\n        parsedItem = { type: 'unknown', value: str, raw: str };\n      } else {\n        parsedItem = this._parseExpression(str);\n      }\n\n      d(\n        'CAST STR = \"%s\"\\n    TYPE = %s\\n    RESULT = %o',\n        str,\n        parsedItem.type,\n        parsedItem.value,\n      );\n\n      parsed.push(parsedItem);\n\n      if (parsedItem.type === 'variable') {\n        variables.push(parsedItem.value);\n      } else if (parsedItem.type === 'expression') {\n        variables.push(...this._extractEsprimaVariables(parsedItem.value));\n      }\n    }\n\n    this._parsed = parsed;\n    this._variables = variables;\n  }\n\n  protected _extractEsprimaVariables(\n    expression: ESTree.Expression,\n  ): Array<string> {\n    const list: Array<string> = [];\n\n    if (expression.type === 'Identifier') {\n      list.push(expression.name);\n    } else if (expression.type === 'BinaryExpression') {\n      for (const el of [expression.left, expression.right]) {\n        list.push(...this._extractEsprimaVariables(el));\n      }\n    } else if (expression.type === 'MemberExpression') {\n      const objName = (expression.object as ESTree.Identifier).name;\n      const objProp = (expression.property as ESTree.Identifier).name;\n\n      list.push(`${objName}.${objProp}`);\n    } else if (expression.type === 'ArrayExpression') {\n      for (const el of expression.elements) {\n        list.push(...this._extractEsprimaVariables(el as ESTree.Expression));\n      }\n    }\n\n    return list;\n  }\n\n  protected _parseExpression(str: string): ParsedItem {\n    try {\n      // Cast as operator\n      if (this._operators[str]) {\n        return { type: 'operator', value: str, raw: str };\n      }\n\n      const expr = esprima.parseScript(str).body[0];\n\n      if (expr.type !== 'ExpressionStatement') {\n        throw new LiluExpressionError(\n          `Unexpected esprima expression type ${expr.type}`,\n        );\n      }\n\n      const ast = expr.expression;\n\n      let type;\n      let value;\n\n      switch (true) {\n        // Cast as variable\n        case ast.type === 'Identifier' || ast.type === 'MemberExpression':\n          return { type: 'variable', value: str, raw: str };\n\n        // Cast as literal\n        case ast.type === 'Literal':\n          value = evaluate(ast, {});\n          type = this._castType(value);\n\n          if (type) return { type, value, raw: str };\n\n          break;\n\n        // Cast as expression\n        case ast.type === 'ArrayExpression' || ast.type === 'BinaryExpression':\n          return { type: 'expression', value: ast, raw: str };\n      }\n    } catch (err) {\n      dError('CAST EXPRESSION: raw = \"%s\" err = %s', str, err.stack);\n    }\n\n    return { type: 'unknown', value: str, raw: str };\n  }\n\n  protected _castType(value: any): LiteralType | null {\n    const type = typeof value;\n\n    switch (true) {\n      case value === null:\n        return 'null';\n\n      case Array.isArray(value):\n        return 'array';\n    }\n\n    switch (type) {\n      case 'string':\n        return 'string';\n      case 'object':\n        return 'object';\n      case 'number':\n        return 'number';\n      case 'boolean':\n        return 'boolean';\n      default:\n        return null;\n    }\n  }\n\n  protected _ensureValue(item: ParsedItem, context?: EvalContext): any {\n    switch (item.type) {\n      case 'variable':\n        return obj.get(context, item.value);\n\n      case 'expression':\n        return evaluate(item.value, context || {});\n\n      default:\n        return item.value;\n    }\n  }\n}\n","import * as array from './utils/array';\nimport timer from './utils/timer';\nimport tbag from './utils/tbag';\nimport {\n  EvalContext,\n  EvalResult,\n  Expression,\n  ExpressionJSON,\n  ExpressionOptions,\n} from './expression';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport { TraceBase } from './trace';\n\nexport type RuleOperation = 'OR' | 'AND';\n\nexport interface RuleOptions {\n  title: string;\n  operation: RuleOperation;\n  conditions: Array<string>;\n  operators: OperatorMap;\n  strict: boolean;\n}\n\nexport interface RuleMatchResult {\n  trace: Array<TraceCondition>;\n  error: boolean;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n  ms: number;\n  __t: object;\n}\n\nexport interface RuleJSON {\n  name: string;\n  title: string;\n  conditions: string[];\n  operation: string;\n}\n\nexport interface TraceCondition extends TraceBase {\n  type: 'condition';\n  item: ExpressionJSON;\n  result: EvalResult;\n}\n\nexport class Rule {\n  protected _title: string;\n  protected _operation: RuleOperation;\n  protected _conditions: Array<Expression>;\n  protected _conditionVariables: Array<string>;\n\n  constructor(options: Partial<RuleOptions>) {\n    this._title = options.title || 'Untitled Rule';\n\n    this._operation = options.operation || 'AND';\n\n    this._conditions = (options.conditions || []).map((exprStr) => {\n      const exprOptions: ExpressionOptions = {\n        strict: options.strict || false,\n        operators: options.operators || DEFAULT_OPERATORS,\n      };\n\n      return new Expression(exprStr, exprOptions);\n    });\n\n    this._conditionVariables = array.uniq(\n      array.flat(this._conditions.map((condition) => condition.variables)),\n    );\n  }\n\n  get name(): string {\n    return 'LiluRule';\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get conditionVariables(): Array<string> {\n    return [...this._conditionVariables];\n  }\n\n  get conditions(): Array<Expression> {\n    return this._conditions;\n  }\n\n  get operation(): string {\n    return this._operation;\n  }\n\n  match(context: EvalContext): RuleMatchResult {\n    const trace: Array<TraceCondition> = [];\n    const tRoot = tbag();\n    const matchTimer = timer();\n\n    const complete = (result: boolean): RuleMatchResult => {\n      const ms = matchTimer.click();\n\n      tRoot\n        .w('%s (Rule) %s / %dms', result ? '✅' : '🔴', this._title, ms)\n        .w('• MATCHED = %o', result);\n\n      return {\n        result,\n        trace,\n        error: false,\n        ms,\n        __t: tRoot,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): RuleMatchResult => {\n      const ms = matchTimer.click();\n\n      tRoot\n        .w('❌ (Rule) %d / ms', ms)\n        .w('• title = %o', this._title)\n        .w('• err_code = %d', errCode)\n        .w('• err_msg =')\n        .w('    - %s', errMsg.replace(/\\n/g, '\\n    - '));\n\n      return {\n        error: true,\n        errMsg,\n        errCode,\n        trace,\n        ms,\n        __t: tRoot,\n      };\n    };\n\n    let lastCondition = this._conditions[0];\n    let isError = false;\n    let lastErrCode = -1;\n    let lastErrMsg = '';\n    let isMatched: boolean;\n\n    let n = 1;\n\n    const conditionRun = (condition: Expression) => {\n      if (isError) return false;\n\n      lastCondition = condition;\n\n      const tCond = tRoot.child();\n      const r = condition.eval(context);\n\n      trace.push({\n        type: 'condition',\n        item: condition.toJSON(),\n        result: r,\n      });\n\n      tCond\n        .w('%s (Condition #%d)', r.error ? '❌' : r.result ? '✅' : '🔴', n++)\n        // .table()\n        // .row()\n        // .cell(r.error ? 'ERROR' : r.result ? 'OK!' : 'INVALID')\n        // .cell('Condition #%d', n++)\n        // .cell('\"%s\" = \"%o\"',\n        //   condition.raw,\n        //   r.error ? `err: ${r.errCode}` : r.result)\n        // .label('%s (Condition #%d) | \"%s\" = \"%o\"',\n        //   r.error ? '❌' : r.result ? '👌' : '🔴', n++,\n        //   condition.raw,\n        //   r.error ? `err: ${r.errCode}` : r.result\n        // )\n        // .tableWrite()\n        .table()\n        .label('\"%s\" = \"%o\"', condition.raw, r.error\n          ? `err: ${r.errCode}`\n          : r.result\n        )\n        .row()\n          .cell('type')\n          .cell('value')\n          .cell('ensured')\n        // .splitter()\n        .row()\n          .cell('@%s', r.stack.leftValue.type)\n          .cell('\"%s\"', r.stack.leftValue.raw || '@missed_left')\n          .cell('= %o', r.stack.leftValue.ensured)\n        .row()\n          .cell('@%s', r.stack.rightValue.type)\n          .cell('\"%s\"', r.stack.rightValue.raw || '@missed_right')\n          .cell('= %o', r.stack.rightValue.ensured)\n        .tableWrite()\n        .w('');\n\n      if (r.error) {\n        tCond\n          .w('• ERROR:')\n          .w('  • err_code = %d', r.errCode)\n          .w('  • err_msg = %s', r.errMsg)\n      }\n\n      if (r.error) {\n        isError = true;\n        lastErrCode = r.errCode || -1;\n        lastErrMsg = r.errMsg || 'unknown error';\n      }\n\n      return !r.error && r.result == true;\n    };\n\n    if (this.operation === 'OR') {\n      isMatched = this.conditions.some(conditionRun);\n    } else {\n      isMatched = this.conditions.every(conditionRun);\n    }\n\n    if (isError) {\n      return fail(\n        lastErrCode,\n        `condition[${lastCondition.raw}].eval()\\n${lastErrMsg || '@missed'}`,\n      );\n    }\n\n    return complete(isMatched);\n  }\n\n  toString(): string {\n    const conditions = this._conditions.join('\",\\n    \"');\n    return `${this.name}(\\n  title = \"${this._title}\"\\n  conditions = [\\n    \"${conditions}\"]\\n)`;\n  }\n\n  toJSON(): RuleJSON {\n    return {\n      name: this.name,\n      title: this.title,\n      operation: this.operation,\n      conditions: this.conditions.map((v) => v.raw),\n    };\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n}\n","import * as array from './utils/array';\nimport * as obj from './utils/object';\nimport tbag from './utils/tbag';\nimport { Rule, RuleJSON, RuleMatchResult, RuleOptions } from './rule';\nimport { EvalContext } from './expression';\nimport { TraceBase } from './trace';\nimport timer from './utils/timer';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\n\nexport interface PermissionAttributes {\n  [key: string]: any;\n}\n\nexport interface PermissionOptions {\n  strict: boolean,\n  operators: OperatorMap;\n  title: string;\n  actions: Array<string>;\n  attributes: PermissionAttributes;\n  rules: Array<Partial<RuleOptions>>;\n}\n\nexport interface PermissionJSON {\n  name: string;\n  attributes: PermissionAttributes;\n  rules: Array<RuleJSON>;\n  title: string;\n  actions: Array<string>;\n}\n\nexport interface TraceRule extends TraceBase {\n  type: 'rule';\n  item: RuleJSON;\n  result: RuleMatchResult;\n}\n\nexport interface PermissionCheckResult {\n  trace: Array<TraceRule>;\n  error: boolean;\n  result?: boolean;\n  errCode?: number;\n  errMsg?: string;\n  ms: number;\n  __t: object;\n}\n\nexport class Permission {\n  protected _title: string;\n  protected _strict: boolean;\n  protected _actions: Array<string>;\n  protected _attributes: PermissionAttributes;\n  protected _rules: Array<Rule>;\n  protected _ruleVariables: Array<string>;\n\n  constructor(options: Partial<PermissionOptions>) {\n    this._title = options.title || 'Untitled Permission';\n\n    this._strict = options.strict || false;\n\n    this._actions = obj.clone(options.actions || []);\n\n    this._attributes = obj.clone(options.attributes || {});\n\n    this._rules = (options.rules || []).map((opts) => {\n      const ruleOptions = {\n        ...opts,\n        strict: options.strict || false,\n        operators: options.operators || DEFAULT_OPERATORS\n      }\n\n      return new Rule(ruleOptions);\n    });\n\n    this._ruleVariables = array.uniq(\n      array.flat(this._rules.map((rule) => rule.conditionVariables)),\n    );\n  }\n\n  get name(): string {\n    return 'LiluPermission';\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get actions(): Array<string> {\n    return obj.clone(this._actions);\n  }\n\n  get ruleVariables(): Array<string> {\n    return obj.clone(this._ruleVariables);\n  }\n\n  get attributes(): PermissionAttributes {\n    return obj.clone(this._attributes);\n  }\n\n  check(context: EvalContext): PermissionCheckResult {\n    const tRoot = tbag();\n    const trace: Array<TraceRule> = [];\n    const startTimer = timer();\n\n    const complete = (result: boolean): PermissionCheckResult => {\n      const ms = startTimer.click();\n      const symPrefix = result ? '✅' : '🔴';\n\n      tRoot\n        .w('%s (Permission) %s / %dms', symPrefix, this._title, ms)\n        .w('• PASSED = %o', result);\n\n      return {\n        error: false,\n        result,\n        ms,\n        trace,\n        __t: tRoot,\n      };\n    };\n\n    const fail = (errCode: number, errMsg: string): PermissionCheckResult => {\n      const ms = startTimer.click();\n\n      tRoot\n        .w('❌ (Permission) / %dms', ms)\n        .w('• title = %o', this.title)\n        .w('• err_code = %d', errCode)\n        .w('• err_msg = %s', errMsg)\n        .w('• context = %s', JSON.stringify(context, null, 2).replace(/\\n/g, '\\n  '));\n\n      return {\n        error: true,\n        errCode,\n        errMsg,\n        ms,\n        trace,\n        __t: tRoot,\n      };\n    };\n\n    const missedContextKey = this._ruleVariables.find(\n      (keyPath) => obj.get(context, keyPath) === undefined,\n    );\n\n    if (missedContextKey) {\n      return fail(6, `missed context variable: ${missedContextKey}`);\n    }\n\n    for (const rule of this._rules) {\n      let hasTraced = false;\n\n      try {\n        const r = rule.match(context);\n\n        tRoot.attach(r.__t);\n\n        trace.push({\n          type: 'rule',\n          item: rule.toJSON(),\n          result: r,\n        });\n        hasTraced = true;\n\n        if (r.error) {\n          return fail(\n            r.errCode as number,\n            `error while \"${rule.title}\" match.`,\n          );\n        }\n\n        if (!r.result) {\n          return complete(false);\n        }\n      } catch (err) {\n        if (!hasTraced) {\n          trace.push({\n            type: 'rule',\n            item: rule.toJSON(),\n            result: {\n              error: true,\n              errCode: -1,\n              errMsg: err.message,\n              ms: 0,\n              trace: [],\n              __t: tbag(),\n            },\n          });\n        }\n        return fail(\n          -1,\n          `critical error while match${rule.toString()}\\n${err.stack}`,\n        );\n      }\n    }\n\n    return complete(true);\n  }\n\n  toString(): string {\n    const actions = this._actions.join('\", \"');\n    const rules = this._rules.map((v) => v.toString()).join('\", \"');\n\n    return `${this.name}(\\n  title = \"${this._title}\"\\n  actions = [\"${actions}\"]\\n rules =  [\"${rules}\"]\\n)`;\n  }\n\n  toJSON(): PermissionJSON {\n    return {\n      name: this.name,\n      title: this.title,\n      actions: this.actions,\n      attributes: this.attributes,\n      rules: this._rules.map((v) => v.toJSON()),\n    };\n  }\n\n  inspect(): object {\n    return Object.assign({}, this);\n  }\n}\n","export class LiluTimeoutError extends Error {\n  public name: string;\n  public code: number;\n\n  constructor(message: string, code?: number) {\n    super(message);\n\n    this.name = 'LiluTimeoutError';\n    this.code = code || -1;\n  }\n\n  toString(): string {\n    return `${this.name}(${this.code}, ${this.message})`;\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      code: this.code\n    });\n  }\n\n  inspect(): object {\n    return Object.assign(new Error(this.message), this);\n  }\n}\n","import { LiluTimeoutError } from '../errors/LiluTimeoutError';\n\nexport default function promiseTimeout(promise, timeoutMillis, message) {\n  let error = new LiluTimeoutError(message || 'Timeout error', 408);\n  let timeout;\n\n  return Promise.race([\n    promise,\n    new Promise(function(resolve, reject) {\n      timeout = setTimeout(function() {\n        reject(error);\n      }, timeoutMillis);\n    }),\n  ]).then(function(v) {\n    clearTimeout(timeout);\n    return v;\n  }, function(err) {\n    clearTimeout(timeout);\n    throw err;\n  });\n}\n","import { TracePermission } from '../lilu';\nimport tbag from '../utils/tbag';\n\nexport class LiluGrantedError extends Error {\n  public name: string;\n  public code: number;\n  public trace: Array<TracePermission>;\n  public execStack: string;\n  public originErr: Error | null;\n\n  constructor(\n    code: number,\n    message: string,\n    trace?: Array<TracePermission>,\n    execStack?: string,\n    originErr?: Error,\n  ) {\n    super(message);\n\n    this.name = 'LiluGrantedError';\n    this.code = code || -1;\n    this.trace = trace || [];\n    this.execStack = execStack || '';\n    this.originErr = originErr || null;\n  }\n\n  get critical() {\n    return this.code === -1;\n  }\n\n  toString(): string {\n    const title = `${this.name}(code = ${this.code}, \"${this.message}\")`;\n\n    const originErr = this.originErr && this.originErr.stack\n      ? '  - Origin Error: ' + this.originErr.stack.replace(/\\n/g, '\\n    ')\n      : '';\n\n    const execStack = this.execStack\n      ? '  - Exec Stack: ' + this.execStack.replace(/\\n/g, '\\n    ')\n      : '';\n\n    return [title, originErr, execStack]\n      .filter(v => v && v.length)\n      .join('\\n');\n  }\n\n  toJSON(): object {\n    return Object.assign({}, this, {\n      message: this.message,\n      code: this.code,\n      critical: this.critical,\n      originErr: this.originErr ? Object.assign({}, this.originErr) : null,\n      trace: this.trace,\n      execStack: this.execStack,\n    });\n  }\n\n  inspect(): object {\n    return Object.assign(new Error(this.message), this);\n  }\n\n  static from(\n    err: LiluGrantedError | any,\n    extendTrace?: Array<TracePermission>,\n    extendExecStack?: string\n  ): LiluGrantedError {\n    const errCode = err.code || -1;\n    const errMsg = err.message || 'unknown error';\n    const newErr = new LiluGrantedError(errCode, errMsg);\n\n    if (err instanceof LiluGrantedError) {\n      newErr.trace = [\n        ...(extendTrace || []),\n        ...(err.trace || [])\n      ];\n\n      if (extendExecStack) {\n        const tRoot = tbag().w(extendExecStack);\n\n        if (err.execStack) {\n          tRoot.child().w(err.execStack);\n        }\n\n        newErr.execStack = tRoot.collect();\n      } else {\n        newErr.execStack = err.execStack || '';\n      }\n\n      newErr.originErr = err.originErr || err;\n    } else {\n      newErr.trace = extendTrace || [];\n      newErr.execStack = extendExecStack || '';\n      newErr.originErr = err;\n    }\n\n    return newErr;\n  }\n}\n","import debug from 'debug';\nimport globToRegExp from 'glob-to-regexp';\n\nimport * as obj from './utils/object';\nimport timer from './utils/timer';\nimport tbag from './utils/tbag';\nimport promiseOrCallback from './utils/promiseOrCallback';\nimport { EvalContext } from './expression';\nimport { DEFAULT_OPERATORS, OperatorMap } from './operators';\nimport {\n  Permission,\n  PermissionJSON,\n  PermissionCheckResult,\n  PermissionOptions,\n} from './permission';\nimport { TraceBase } from './trace';\nimport promiseTimeout from './utils/promiseTimeout';\nimport { LiluGrantedError } from './errors/LiluGrantedError';\n\nconst d = debug('lilu:permission');\n\nexport interface LiluOperators {\n  [key: string]: (left: any, b: any) => boolean;\n}\n\nexport interface LiluEnviroment {\n  [key: string]: any;\n}\n\nexport interface LiluOptions {\n  strict: boolean;\n  timeout: number | false;\n  operators: OperatorMap | Array<string>;\n  enviroment: LiluEnviroment;\n  permissions: Array<Partial<PermissionOptions>>;\n}\n\nexport interface GrantedOptions {\n  enviroment: LiluEnviroment;\n  timeout: number | false;\n  context: EvalContext;\n}\n\nexport interface GrantedResultError {\n  errCode: number;\n  errMsg: string;\n}\n\nexport interface GrantedTrace {\n  toString: () => string;\n  toJSON: () => Array<TracePermission>;\n}\n\nexport interface GrantedResult {\n  passed: boolean;\n  timeout: boolean;\n  errors: Array<GrantedResultError>;\n  nErrors: number;\n  permission: PermissionJSON | null;\n  mismatched: Array<PermissionJSON>;\n  ms: number;\n  trace: GrantedTrace;\n  __t: object;\n}\n\nexport interface GrantedManyResult {\n  actions: {\n    allow: Array<string>,\n    disallow: Array<string>\n  },\n  permissions: {\n    matched: Array<PermissionJSON>,\n    mismatched: Array<PermissionJSON>\n  },\n  passed: boolean;\n  timeout: boolean;\n  errors: Array<GrantedResultError>;\n  nErrors: number;\n  ms: number;\n  trace: GrantedTrace;\n  __t: object;\n}\n\nexport interface CheckPermissionResult extends PermissionCheckResult {\n  timeout: boolean;\n}\n\nexport type GrantedCallback = (err: Error | null, passed: GrantedResult) => void;\n\nexport type GrantedManyCallback = (err: Error | null, passed: GrantedManyResult) => void;\n\ntype Callback = (err?: Error | null, result?: object) => void;\n\nexport interface TracePermission extends TraceBase {\n  type: 'permission';\n  item: PermissionJSON;\n  result: PermissionCheckResult;\n}\n\nexport class Lilu {\n  protected _strict: boolean;\n\n  protected _timeout: number | false;\n\n  protected _enviroment: LiluEnviroment;\n\n  protected _operators: LiluOperators;\n\n  protected _permissionsByActionMap: Map<string, Array<Permission>>;\n\n  protected _permissions: Array<Permission>;\n\n  constructor(options?: Partial<LiluOptions>) {\n    options = options || {};\n\n    this._strict = options.strict || false;\n    this._timeout = options.timeout || false;\n    this._enviroment = obj.clone(options.enviroment || {});\n    this._operators = obj.clone(options.operators || DEFAULT_OPERATORS);\n\n    if (Array.isArray(options.operators)) {\n      this._operators = obj.pick(\n        DEFAULT_OPERATORS,\n        this._operators,\n      ) as LiluOperators;\n    }\n\n    this._permissionsByActionMap = new Map();\n    this._permissions = (options.permissions || []).map((permissionOptions) => {\n      const opts = {\n        ...permissionOptions,\n        operators: this._operators,\n        strict: this._strict,\n      };\n\n      const permission = new Permission(opts);\n\n      for (const actionName of permission.actions) {\n        const list = this._permissionsByActionMap.get(actionName) || [];\n\n        list.push(permission);\n\n        this._permissionsByActionMap.set(actionName, list);\n      }\n\n      return permission;\n    });\n  }\n\n  get permissions(): Array<Permission> {\n    return [...this._permissions];\n  }\n\n  findActions(value: string | RegExp): Array<string> {\n    const startTimer = timer();\n\n    let pattern: RegExp | null = null;\n\n    if (typeof value === 'string') {\n      pattern = globToRegExp(value, { extended: true });\n    }\n\n    if (!(pattern instanceof RegExp)) {\n      throw new TypeError(\n        'Failed to find actions, the value argument expected as regexp or string.',\n      );\n    }\n\n    const list: Array<string> = [];\n\n    for (const value of this._permissionsByActionMap.keys()) {\n      if (pattern.test(value)) {\n        list.push(value);\n      }\n    }\n\n    const ms = startTimer.click();\n\n    d(\n      'FIND ACTIONS: (%dms)\\n  VALUE = %o\\n  PATTERN = %o\\n  RESULT: %o',\n      ms,\n      value,\n      pattern,\n      list,\n    );\n\n    return list;\n  }\n\n  granted(\n    actionName: string,\n    optionsOrContextOrCallback?:\n      | EvalContext\n      | Partial<GrantedOptions>\n      | GrantedCallback,\n    cb?: GrantedCallback,\n  ): Promise<GrantedResult> {\n    let callback: GrantedCallback | undefined = cb;\n\n    const options: GrantedOptions = {\n      timeout: this._timeout || false,\n      enviroment: this._enviroment || {},\n      context: {},\n    };\n\n    if (typeof actionName !== 'string') {\n      throw new TypeError('First argument \"actionName\" expected as String.');\n    }\n\n    if (typeof optionsOrContextOrCallback === 'function') {\n      callback = optionsOrContextOrCallback as GrantedCallback;\n    } else if (\n      optionsOrContextOrCallback &&\n      optionsOrContextOrCallback.context\n    ) {\n      Object.assign(options, optionsOrContextOrCallback);\n    } else if (typeof optionsOrContextOrCallback === 'object') {\n      options.context = optionsOrContextOrCallback;\n    }\n\n    const self = this;\n\n    return promiseOrCallback(callback, function() {\n      const cb = arguments[0] as Callback;\n      self._granted(actionName, options)\n        .then(cb.bind(null, null), cb);\n    });\n  }\n\n  grantedMany(\n    actions: Array<string> | string | RegExp,\n    optionsOrContextOrCallback?:\n      | EvalContext\n      | Partial<GrantedOptions>\n      | GrantedManyCallback,\n    cb?: GrantedManyCallback,\n  ): Promise<GrantedManyResult> {\n    let callback: GrantedManyCallback | undefined = cb;\n\n    const options: GrantedOptions = {\n      timeout: this._timeout || false,\n      enviroment: this._enviroment || {},\n      context: {},\n    };\n\n    if (typeof actions === 'string') {\n      if (actions.indexOf('*') > -1) {\n        const pattern = actions;\n        actions = this.findActions(pattern);\n      } else {\n        actions = [actions];\n      }\n    } else if (actions instanceof RegExp) {\n      const pattern = actions;\n\n      actions = this.findActions(pattern);\n    }\n\n    if (!Array.isArray(actions)) {\n      throw new TypeError('First argument \"actions\" expected as Array.');\n    }\n\n    if (typeof optionsOrContextOrCallback === 'function') {\n      callback = optionsOrContextOrCallback as GrantedManyCallback;\n    } else if (\n      optionsOrContextOrCallback &&\n      optionsOrContextOrCallback.context\n    ) {\n      Object.assign(options, optionsOrContextOrCallback);\n    } else if (typeof optionsOrContextOrCallback === 'object') {\n      options.context = optionsOrContextOrCallback;\n    }\n\n    const self = this;\n\n    return promiseOrCallback(callback, function() {\n      const cb = arguments[0] as Callback;\n      self._grantedMany(actions as string[], options)\n        .then(cb.bind(null, null), cb);\n    });\n  }\n\n  grantedAny(\n    actions: Array<string> | string | RegExp,\n    optionsOrContextOrCallback?:\n      | EvalContext\n      | Partial<GrantedOptions>\n      | GrantedCallback,\n    cb?: GrantedCallback,\n  ): Promise<GrantedResult> {\n    let callback: GrantedCallback | undefined = cb;\n\n    const options: GrantedOptions = {\n      timeout: this._timeout || false,\n      enviroment: this._enviroment || {},\n      context: {},\n    };\n\n    if (typeof actions === 'string') {\n      if (actions.indexOf('*') > -1) {\n        const pattern = actions;\n        actions = this.findActions(pattern);\n      } else {\n        actions = [actions];\n      }\n    } else if (actions instanceof RegExp) {\n      const pattern = actions;\n\n      actions = this.findActions(pattern);\n    }\n\n    if (!Array.isArray(actions)) {\n      throw new TypeError('First argument \"actions\" expected as Array.');\n    }\n\n    if (typeof optionsOrContextOrCallback === 'function') {\n      callback = optionsOrContextOrCallback as GrantedCallback;\n    } else if (\n      optionsOrContextOrCallback &&\n      optionsOrContextOrCallback.context\n    ) {\n      Object.assign(options, optionsOrContextOrCallback);\n    } else if (typeof optionsOrContextOrCallback === 'object') {\n      options.context = optionsOrContextOrCallback;\n    }\n\n    const self = this;\n\n    return promiseOrCallback(callback, function() {\n      const cb = arguments[0] as Callback;\n      self._grantedAny(actions as string[], options)\n        .then(cb.bind(null, null), cb);\n    });\n  }\n\n  protected async _granted(\n    actionName: string,\n    options: GrantedOptions,\n  ): Promise<GrantedResult> {\n    const {\n      enviroment = this._enviroment,\n      timeout = this._timeout,\n      context = {},\n    } = options;\n\n    const errors: Array<GrantedResultError> = [];\n    const mismatched: Array<PermissionJSON> = [];\n    const trace: Array<TracePermission> = [];\n    const tRoot = tbag();\n\n    let isTimeout = false;\n\n    const startTimer = timer();\n    const permissionsList = this._permissionsByActionMap.get(actionName) || [];\n\n    const complete = (permission?: Permission): GrantedResult => {\n      const ms = startTimer.click();\n      const passed = !!permission;\n\n      return {\n        passed,\n        timeout: isTimeout,\n        permission: permission ? permission.toJSON() : null,\n        mismatched,\n        errors,\n        nErrors: errors.length,\n        ms,\n        trace: {\n          toString: () => tRoot.collect(),\n          toJSON: () => obj.clone(trace),\n        },\n        __t: tRoot,\n      };\n    };\n\n    const handlePermission = async (\n      permission: Permission,\n    ): Promise<boolean> => {\n      const r = await this._checkPermission(permission, {\n        timeout: (typeof timeout === 'number' && timeout > 0)\n          ? timeout - startTimer.click()\n          : false,\n        enviroment,\n        context\n      });\n\n      tRoot\n        .attach(r.__t)\n        .w('• CHECK ACTION = %s', actionName);\n\n      trace.push({\n        type: 'permission',\n        item: permission.toJSON(),\n        result: r,\n      });\n\n      if (r.error) {\n        errors.push({\n          errCode: r.errCode || -1,\n          errMsg: r.errMsg || 'unknown error',\n        });\n\n        return false;\n      } else if (!r.result) {\n        mismatched.push(permission.toJSON());\n      }\n\n      return !!r.result;\n    };\n\n    for (const permission of permissionsList) {\n      let passed = false;\n\n      try {\n        passed = await handlePermission(permission);\n      } catch (err) {\n        err = LiluGrantedError.from(err, trace, tRoot.collect());\n\n        errors.push({\n          errCode: err.code,\n          errMsg: err.message,\n        });\n\n        throw err;\n      }\n\n      if (passed) {\n        return complete(permission);\n      }\n    }\n\n    return complete();\n  }\n\n  protected async _grantedMany(\n    actions: Array<string>,\n    options: GrantedOptions\n  ): Promise<GrantedManyResult> {\n    const {\n      enviroment = this._enviroment,\n      timeout = this._timeout,\n      context = {},\n    } = options;\n\n    const trace: Array<TracePermission> = [];\n    const tRoot = tbag();\n\n    const allow: Array<string> = [];\n    const disallow: Array<string> = [];\n\n    const matchedMap: Map<Permission, true> = new Map();\n    const mismatchedMap: Map<Permission, true> = new Map();\n\n    let errors: Array<GrantedResultError> = [];\n    let unprocessedActions = [...actions];\n    let isTimeout = false;\n\n    const startTimer = timer();\n\n    const done = (): GrantedManyResult => {\n      const ms = startTimer.click();\n      const passed = actions.length === allow.length && !disallow.length;\n\n      const symPrefix = errors.length\n        ? '❌'\n        : passed ? '✅' : '🔴';\n\n      const matched = Array.from(matchedMap.keys());\n      const mismatched = Array.from(mismatchedMap.keys());\n\n      tRoot.w('%s (Granted Many) / %d ms', symPrefix, ms);\n\n      if (errors.length) {\n        tRoot.w('• ERRORS = %d', errors.length);\n      }\n\n      tRoot\n        .w('• PASSED = %o', passed)\n        .w('• TIMEOUT = %o', isTimeout)\n        .w('• ALLOW = %s', allow.join('\\n        - ') || 'N/A')\n        .w('• DISALLOW = %s', disallow.join('\\n           - ') || 'N/A')\n        .w('• MATCHED = %s', matched.map(v => v.title).join('\\n          - ') || 'N/A')\n        .w('• MISMATCHED = %s', mismatched.map(v => v.title).join('\\n             - ') || 'N/A');\n\n      return {\n        actions: { allow, disallow },\n        permissions: {\n          matched: matched.map(v => v.toJSON()),\n          mismatched: mismatched.map(v => v.toJSON())\n        },\n        passed: passed,\n        timeout: isTimeout,\n        errors,\n        nErrors: errors.length,\n        ms,\n        trace: {\n          toString: () => tRoot.collect(),\n          toJSON: () => obj.clone(trace),\n        },\n        __t: tRoot,\n      }\n    };\n\n    const onError = (err: any) => {\n      err = LiluGrantedError.from(err, trace, tRoot.collect());\n\n      errors.push({\n        errCode: err.code,\n        errMsg: err.message,\n      });\n\n      // call to collect current state\n      done();\n\n      throw err;\n    };\n\n    const handlePermission = async (permission: Permission, targetAction: string): Promise<boolean> => {\n      const r = await this._checkPermission(permission, {\n        enviroment,\n        context,\n        timeout: typeof timeout === 'number' && timeout > 0\n          ? timeout - startTimer.click()\n          : false\n      });\n\n      isTimeout = r.timeout;\n\n      tRoot.attach(r.__t).w('• CHECK ACTION = %s', targetAction)\n      trace.push({\n        type: 'permission',\n        item: permission.toJSON(),\n        result: r,\n      });\n\n      if (r.error) {\n        errors.push({\n          errCode: r.errCode || -1,\n          errMsg: r.errMsg || 'unknown error',\n        });\n      }\n\n      if (r.result) {\n        matchedMap.set(permission, true);\n        return true\n      }\n\n      mismatchedMap.set(permission, true);\n      return false;\n    };\n\n    while (unprocessedActions.length > 0 && !isTimeout) {\n      const actionName = unprocessedActions.pop();\n\n      if (!actionName) break;\n\n      let permissions = this._permissionsByActionMap.get(actionName);\n\n      if (!permissions || !permissions.length) {\n        disallow.push(actionName);\n        continue;\n      }\n\n      // Is already matched\n      if (permissions.some(p => matchedMap.has(p))) {\n        allow.push(actionName);\n        continue;\n      }\n\n      // cut off mismatched\n      permissions = permissions.filter(p => !mismatchedMap.has(p));\n\n      if (!permissions.length) {\n        disallow.push(actionName);\n        continue;\n      }\n\n      for (const permission of permissions) {\n        try {\n          const passed = await handlePermission(permission, actionName);\n\n          if (passed) {\n            allow.push(actionName);\n            break;\n          } else {\n            disallow.push(actionName);\n          }\n        } catch (err) {\n          return onError(err);\n        }\n      }\n    }\n\n    return done();\n  }\n\n  protected async _grantedAny(\n    actions: Array<string>,\n    options: GrantedOptions\n  ): Promise<GrantedResult> {\n    const {\n      enviroment = this._enviroment,\n      timeout = this._timeout,\n      context = {},\n    } = options;\n\n    const trace: Array<TracePermission> = [];\n    const tRoot = tbag();\n\n    const mismatchedMap: Map<Permission, true> = new Map();\n\n    let errors: Array<GrantedResultError> = [];\n    let unprocessedActions = [...actions];\n    let isTimeout = false;\n    let passed = false;\n    let lastCheckPermission: Permission| null = null;\n\n    const startTimer = timer();\n\n    const done = (): GrantedResult => {\n      const ms = startTimer.click();\n\n      const symPrefix = errors.length\n        ? '❌'\n        : passed ? '✅' : '🔴';\n\n      const allow = lastCheckPermission !== null\n        ? lastCheckPermission.actions\n        : [];\n\n      const mismatched = Array.from(mismatchedMap.keys()).map(v => v.toJSON());\n\n      tRoot.w('%s (Granted Any) / %d ms', symPrefix, ms);\n\n      if (errors.length) {\n        tRoot.w('• ERRORS = %d', errors.length);\n      }\n\n      tRoot\n        .w('• TIMEOUT = %o', isTimeout)\n        .w('• ALLOW = %s', allow.join('\\n        - ') || 'N/A')\n        .w('• MISMATCHED = %s', mismatched.map(v => v.title).join('\\n             - ') || 'N/A');\n\n      return {\n        passed,\n        timeout: isTimeout,\n        mismatched,\n        errors,\n        nErrors: errors.length,\n        permission: lastCheckPermission !== null\n          ? lastCheckPermission.toJSON()\n          : null,\n        ms,\n        trace: {\n          toString: () => tRoot.collect(),\n          toJSON: () => obj.clone(trace),\n        },\n        __t: tRoot\n      }\n    };\n\n    const onError = (err: any) => {\n      err = LiluGrantedError.from(err, trace, tRoot.collect());\n\n      errors.push({\n        errCode: err.code,\n        errMsg: err.message,\n      });\n\n      // call to collect current state\n      done();\n\n      throw err;\n    };\n\n    const handlePermission = async (permission: Permission): Promise<boolean> => {\n      const r = await this._checkPermission(permission, {\n        enviroment,\n        context,\n        timeout: typeof timeout === 'number' && timeout > 0\n          ? timeout - startTimer.click()\n          : false\n      });\n\n      isTimeout = r.timeout;\n\n      tRoot.attach(r.__t)\n      trace.push({\n        type: 'permission',\n        item: permission.toJSON(),\n        result: r,\n      });\n\n      if (r.error) {\n        errors.push({\n          errCode: r.errCode || -1,\n          errMsg: r.errMsg || 'unknown error',\n        });\n      }\n\n      if (r.result) {\n        return true;\n      }\n\n      mismatchedMap.set(permission, true);\n      return false;\n    };\n\n    while (unprocessedActions.length > 0 && !isTimeout && !passed) {\n      const actionName = unprocessedActions.pop();\n\n      if (!actionName) break;\n\n      let permissions = this._permissionsByActionMap.get(actionName);\n\n      if (!permissions || !permissions.length) {\n        continue;\n      }\n\n       // cut off mismatched\n      permissions = permissions.filter(p => !mismatchedMap.has(p));\n\n      if (!permissions.length) {\n        continue;\n      }\n\n      for (const permission of permissions) {\n        try {\n          passed = await handlePermission(permission);\n          lastCheckPermission = permission;\n        } catch (err) {\n          return onError(err);\n        }\n\n        if (passed) return done();\n      }\n    }\n\n    return done();\n  }\n\n  async _checkPermission(\n    permission: Permission,\n    options: GrantedOptions\n  ): Promise<CheckPermissionResult> {\n    const {\n      enviroment,\n      timeout,\n      context = {},\n    } = options;\n\n    const startTimer = timer();\n    const wholeContext: EvalContext = obj.clone(context);\n\n    let isVarsComputed = false;\n\n    let tRoot = tbag();\n    let tEnv = tbag();\n\n    // Compute enviroment variables\n    const computePermissionVariables = async () => {\n      for (const variableName of permission.ruleVariables) {\n        const contextValue = obj.get(wholeContext, variableName);\n\n        if (contextValue !== undefined) {\n          continue;\n        }\n\n        if (!isVarsComputed) {\n          tEnv.w('• ENV COMPUTED:');\n          isVarsComputed = true;\n        }\n\n        const ensureTimer = timer();\n        let enviromentValue = obj.get(enviroment, variableName);\n\n        if (typeof enviromentValue === 'function') {\n          try {\n            enviromentValue = await enviromentValue.call(enviroment);\n\n            tEnv.w('    - %s = @%s %o (%d ms)',\n              variableName,\n              typeof enviromentValue,\n              enviromentValue,\n              ensureTimer.click()\n            );\n          } catch (err) {\n            tEnv.w('    - %s = ❌ err:%s (%d ms)\\n       - %s',\n              variableName,\n              err.message,\n              ensureTimer.click(),\n              err.stack.replace(/\\n/g, '\\n       - ')\n            );\n\n            if (this._strict) throw err;\n          }\n        }\n\n        if (enviromentValue !== undefined) {\n          obj.set(wholeContext, variableName, enviromentValue);\n        }\n      }\n    };\n\n    const handlePermission = async (): Promise<CheckPermissionResult> => {\n      await computePermissionVariables();\n\n      const r = permission.check(wholeContext);\n\n      // @ts-ignore\n      tRoot = r.__t;\n\n      return { ...r, timeout: false };\n    };\n\n    let result: CheckPermissionResult;\n\n    try {\n      if (timeout) {\n        const timeoutLeft = timeout - startTimer.click();\n\n        result = await promiseTimeout(\n          handlePermission(),\n          timeoutLeft,\n          'timeout',\n        );\n      } else {\n        result = await handlePermission();\n      }\n\n      if (result.error && this._strict) {\n        const trace: Array<TracePermission> = [{\n          type: 'permission',\n          item: permission.toJSON(),\n          result\n        }];\n\n        throw new LiluGrantedError(\n          result.errCode || -1,\n          result.errMsg || 'unknown error',\n          trace\n        );\n      }\n\n      tRoot.merge(tEnv);\n    } catch (err) {\n      const errCode = err.code || -1;\n      const errMsg = err.message;\n      const isTimeoutError = err.name === 'LiluTimeoutError';\n      const isCriticalError = !isTimeoutError && errCode === -1;\n\n      if (isTimeoutError || isCriticalError) {\n        tRoot\n          .w(isTimeoutError ? '⏰ (Permission)' : '❌❌❌ (Permission)')\n          .w('• title = %s', permission.title)\n          .w('• err_code = %d', errCode)\n          .w('• err_msg = %s', errMsg)\n          .w('• context = %s', JSON.stringify(wholeContext, null, 2).replace(/\\n/g, '\\n  '))\n      }\n\n      tRoot.merge(tEnv);\n\n      if (!isTimeoutError && this._strict || isCriticalError) {\n        throw LiluGrantedError.from(err, [], tRoot.collect());\n      } else {\n        result = {\n          trace: [],\n          error: true,\n          timeout: isTimeoutError,\n          errCode,\n          errMsg,\n          ms: 0,\n          __t: tRoot\n        }\n      }\n    }\n\n    result.ms = startTimer.click();\n    return result;\n  }\n}\n"],"names":["set","obj","path","value","Object","Array","isArray","toString","match","slice","reduce","a","c","i","Math","abs","length","get","defaultValue","undefined","travel","regexp","String","prototype","split","call","filter","Boolean","res","key","result","pick","list","timer","startAt","Date","now","instance","reset","click","uniq","arr","Set","flat","depth","isNaN","Number","acc","cur","push","apply","format","fmt","args","re","replace","escaped","ptn","flag","arg","shift","JSON","stringify","unshift","join","textTable","rows","MAX_LENGTH_PER_CELL","MAX_LINES_PER_ROWS","MAP_IS_ROW_LABEL","MAX_CELL_AMOUNT","api","row","createRow","label","createLabel","tableWrite","complete","isLabelFirst","isLabelLast","maxLabelLength","max","v","idx","map","maxRowLength","b","avgDiff","round","start","len","padStart","end","rowIdx","lines","isLabel","isNextLabel","isLastRow","rowSplitter","cellSplitter","lineIdx","cells","cellIdx","coll","maxLen","padEnd","w","createCell","cell","bind","cellLength","chr","s","createTBag","rootChilds","collect","childs","prefix","array","splitter","child","ix","last","more","prefix_","rootCollect","line","table","attach","prepend","merge","isChild","str","promiseOrCallback","callback","fn","error","process","nextTick","arguments","Promise","resolve","reject","DEFAULT_OPERATORS","leftValue","rightValue","some","indexOf","LiluExpressionError","Error","constructor","message","expressionText","code","name","toJSON","assign","d","debug","dError","EXPRESSION_REG_EXP","EXPRESSION_LITERAL_TYPES","Expression","options","_raw","_parsed","_variables","_operators","operators","_parse","_validateAndThrow","raw","variables","isValid","_","keys","eval","context","stack","operator","ensured","type","fail","errCode","errMsg","left","right","_ensureValue","operatorFn","err","inspect","parsed","isLiteral","matches","exec","trim","parsedItem","_parseExpression","_extractEsprimaVariables","expression","el","objName","object","objProp","property","elements","expr","esprima","parseScript","body","ast","evaluate","_castType","item","Rule","_title","title","_operation","operation","_conditions","conditions","exprStr","exprOptions","strict","_conditionVariables","condition","conditionVariables","trace","tRoot","tbag","matchTimer","ms","__t","lastCondition","isError","lastErrCode","lastErrMsg","isMatched","n","conditionRun","tCond","r","every","Permission","_strict","_actions","actions","_attributes","attributes","_rules","rules","opts","ruleOptions","_ruleVariables","rule","ruleVariables","check","startTimer","symPrefix","missedContextKey","find","keyPath","hasTraced","LiluTimeoutError","promiseTimeout","promise","timeoutMillis","timeout","race","setTimeout","then","clearTimeout","LiluGrantedError","execStack","originErr","critical","from","extendTrace","extendExecStack","newErr","Lilu","_timeout","_enviroment","enviroment","_permissionsByActionMap","Map","_permissions","permissions","permissionOptions","permission","actionName","findActions","pattern","globToRegExp","extended","RegExp","TypeError","test","granted","optionsOrContextOrCallback","cb","self","_granted","grantedMany","_grantedMany","grantedAny","_grantedAny","errors","mismatched","isTimeout","permissionsList","passed","nErrors","handlePermission","_checkPermission","allow","disallow","matchedMap","mismatchedMap","unprocessedActions","done","matched","onError","targetAction","pop","p","has","lastCheckPermission","wholeContext","isVarsComputed","tEnv","computePermissionVariables","variableName","contextValue","ensureTimer","enviromentValue","timeoutLeft","isTimeoutError","isCriticalError"],"mappings":"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"}